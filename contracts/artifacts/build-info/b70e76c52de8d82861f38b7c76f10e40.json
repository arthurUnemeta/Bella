{
	"id": "b70e76c52de8d82861f38b7c76f10e40",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n    \n   \n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n // the time of the approved start time \n    uint private  _APPROVED_START_TIME = 0;\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n    function getDate() internal view returns(uint){\n        uint time = block.timestamp;\n        return(time);\n    }\n\n    function _setApprovedStartTime(uint time) internal virtual{\n        _APPROVED_START_TIME = time;\n    }\n\n    function _getApprovedStartTime()internal view returns (uint){\n        return _APPROVED_START_TIME;\n    }\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        if (getDate()<_APPROVED_START_TIME){\n            revert CanNotApproval();\n        }\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (getDate()<_APPROVED_START_TIME){\n            revert CanNotApproval();\n        }\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}"
			},
			"contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    error CanNotApproval();\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 9999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CanNotApproval",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":895:41959  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":3670:3671  0 */\n  0x00\n    /* \"contracts/ERC721A.sol\":3633:3671  uint private  _APPROVED_START_TIME = 0 */\n  dup1\n  sstore\n    /* \"contracts/ERC721A.sol\":5040:5194  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":5106:5111  _name */\n  0x03\n    /* \"contracts/ERC721A.sol\":5106:5119  _name = name_ */\n  tag_6\n    /* \"contracts/ERC721A.sol\":5114:5119  name_ */\n  dup4\n    /* \"contracts/ERC721A.sol\":5106:5111  _name */\n  dup3\n    /* \"contracts/ERC721A.sol\":5106:5119  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":5129:5136  _symbol */\n  0x04\n    /* \"contracts/ERC721A.sol\":5129:5146  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/ERC721A.sol\":5139:5146  symbol_ */\n  dup3\n    /* \"contracts/ERC721A.sol\":5129:5136  _symbol */\n  dup3\n    /* \"contracts/ERC721A.sol\":5129:5146  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5910:5917  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5156:5169  _currentIndex */\n  0x01\n    /* \"contracts/ERC721A.sol\":5156:5187  _currentIndex = _startTokenId() */\n  sstore\n  pop\n    /* \"contracts/ERC721A.sol\":895:41959  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_32:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_33:\n    /* \"#utility.yul\":1309:1370   */\n  tag_34\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_35:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_36\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_15:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_38:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_17:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_43:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_44:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_42:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2994:3091   */\n  tag_51\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_52\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_46)\n    /* \"#utility.yul\":3222:3885   */\ntag_54:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_58:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_19:\n    /* \"contracts/ERC721A.sol\":895:41959  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":895:41959  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9583:10213  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"contracts/ERC721A.sol\":9583:10213  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":10467:10565  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16880:17094  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1814:1856   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1802:1857   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1784:1858   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1772:1774   */\n      0x20\n        /* \"#utility.yul\":1757:1775   */\n      add\n        /* \"contracts/ERC721A.sol\":16880:17094  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1638:1864   */\n      jump\n        /* \"contracts/ERC721A.sol\":16240:16730  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/ERC721A.sol\":6322:6639  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"contracts/ERC721A.sol\":6592:6604  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6576:6589  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6576:6604  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6322:6639  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"contracts/ERC721A.sol\":6322:6639  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2329:2506   */\n      jump\n        /* \"contracts/ERC721A.sol\":20515:23279  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23370:23557  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11819:11969  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7473:7703  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10636:10738  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17421:17744  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":24138:24534  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10839:11152  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17894:18056  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC721A.sol\":18014:18039  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17991:17995  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18014:18039  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18014:18032  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":18014:18039  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":18014:18049  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17894:18056  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":9583:10213  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":9668:9672  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":9986:10011  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9986:10087  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10062:10087  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9986:10087  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"contracts/ERC721A.sol\":9986:10163  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":10138:10163  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9986:10163  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"contracts/ERC721A.sol\":9967:10163  return... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9583:10213  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10467:10565  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"contracts/ERC721A.sol\":10521:10534  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10553:10558  _name */\n      0x03\n        /* \"contracts/ERC721A.sol\":10546:10558  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10467:10565  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16880:17094  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"contracts/ERC721A.sol\":16956:16963  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":16980:16996  _exists(tokenId) */\n      tag_100\n        /* \"contracts/ERC721A.sol\":16988:16995  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16980:16987  _exists */\n      tag_101\n        /* \"contracts/ERC721A.sol\":16980:16996  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/ERC721A.sol\":16975:17039  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"contracts/ERC721A.sol\":17005:17039  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16975:17039  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n      pop\n        /* \"contracts/ERC721A.sol\":17057:17081  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17057:17072  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17057:17081  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17057:17087  _tokenApprovals[tokenId].value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16880:17094  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16240:16730  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"contracts/ERC721A.sol\":16342:16362  _APPROVED_START_TIME */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":5267:5282  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":16332:16362  getDate()<_APPROVED_START_TIME */\n      lt\n        /* \"contracts/ERC721A.sol\":16328:16411  if (getDate()<_APPROVED_START_TIME){... */\n      iszero\n      tag_106\n      jumpi\n        /* \"contracts/ERC721A.sol\":16384:16400  CanNotApproval() */\n      mload(0x40)\n      0xcfe89eac00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16328:16411  if (getDate()<_APPROVED_START_TIME){... */\n    tag_106:\n        /* \"contracts/ERC721A.sol\":16420:16433  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16436:16452  ownerOf(tokenId) */\n      tag_107\n        /* \"contracts/ERC721A.sol\":16444:16451  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16436:16443  ownerOf */\n      tag_57\n        /* \"contracts/ERC721A.sol\":16436:16452  ownerOf(tokenId) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/ERC721A.sol\":16420:16452  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":16467:16495  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16463:16635  if (_msgSenderERC721A() != owner)... */\n      tag_113\n      jumpi\n        /* \"contracts/ERC721A.sol\":16514:16558  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_111\n        /* \"contracts/ERC721A.sol\":16531:16536  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17894:18056  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16514:16558  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_111:\n        /* \"contracts/ERC721A.sol\":16509:16635  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_113\n      jumpi\n        /* \"contracts/ERC721A.sol\":16585:16620  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16509:16635  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_113:\n        /* \"contracts/ERC721A.sol\":16645:16669  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16645:16660  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":16645:16669  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16645:16680  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16695:16723  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16645:16669  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16695:16723  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16318:16730  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":16240:16730  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20515:23279  function transferFrom(... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":20652:20679  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20682:20709  _packedOwnershipOf(tokenId) */\n      tag_118\n        /* \"contracts/ERC721A.sol\":20701:20708  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20682:20700  _packedOwnershipOf */\n      tag_119\n        /* \"contracts/ERC721A.sol\":20682:20709  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC721A.sol\":20652:20709  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20765:20769  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":20724:20769  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":20740:20759  prevOwnershipPacked */\n      dup2\n        /* \"contracts/ERC721A.sol\":20724:20769  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20720:20806  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_120\n      jumpi\n        /* \"contracts/ERC721A.sol\":20778:20806  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20720:20806  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_120:\n        /* \"contracts/ERC721A.sol\":20818:20845  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19648:19672  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19648:19663  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":19648:19672  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19872:19898  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19285:19315  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n        /* \"contracts/ERC721A.sol\":18993:19009  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC721A.sol\":18982:19010  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19263:19283  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19260:19316  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":21001:21180  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_129\n      jumpi\n        /* \"contracts/ERC721A.sol\":21093:21136  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_127\n        /* \"contracts/ERC721A.sol\":21110:21114  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17894:18056  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21093:21136  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_127:\n        /* \"contracts/ERC721A.sol\":21088:21180  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_129\n      jumpi\n        /* \"contracts/ERC721A.sol\":21145:21180  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21088:21180  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_129:\n        /* \"contracts/ERC721A.sol\":21195:21211  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21191:21243  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_130\n      jumpi\n        /* \"contracts/ERC721A.sol\":21220:21243  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21191:21243  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_130:\n        /* \"contracts/ERC721A.sol\":21386:21401  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21383:21540  if approvedAddress {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/ERC721A.sol\":21524:21525  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21503:21522  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21496:21526  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21383:21540  if approvedAddress {... */\n    tag_133:\n        /* \"contracts/ERC721A.sol\":21912:21936  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21912:21930  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":21912:21936  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21910:21936  --_packedAddressData[from] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":21980:22002  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":21978:22002  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15131:15142  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15106:15129  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15102:15143  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15089:15152  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":15089:15152  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"contracts/ERC721A.sol\":22266:22292  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22266:22283  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22266:22292  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC721A.sol\":22266:22438  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":22555:22602  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"contracts/ERC721A.sol\":22555:22607  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"contracts/ERC721A.sol\":22551:23168  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_138\n      jumpi\n        /* \"contracts/ERC721A.sol\":22659:22660  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22649:22660  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22627:22646  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22780:22810  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22780:22797  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22780:22810  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22780:22815  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"contracts/ERC721A.sol\":22776:23154  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_140\n      jumpi\n        /* \"contracts/ERC721A.sol\":22916:22929  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":22901:22912  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22901:22929  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22897:23136  if (nextTokenId != _currentIndex) {... */\n      tag_140\n      jumpi\n        /* \"contracts/ERC721A.sol\":23061:23091  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23061:23078  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":23061:23091  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23061:23113  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22897:23136  if (nextTokenId != _currentIndex) {... */\n    tag_140:\n        /* \"contracts/ERC721A.sol\":22609:23168  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":22551:23168  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_138:\n        /* \"contracts/ERC721A.sol\":23212:23219  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23208:23210  to */\n      dup6\n        /* \"contracts/ERC721A.sol\":23193:23220  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC721A.sol\":23202:23206  from */\n      dup8\n        /* \"contracts/ERC721A.sol\":23193:23220  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20642:23279  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20515:23279  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23370:23557  function safeTransferFrom(... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":23511:23550  safeTransferFrom(from, to, tokenId, '') */\n      tag_144\n        /* \"contracts/ERC721A.sol\":23528:23532  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23534:23536  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23538:23545  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23511:23550  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23511:23527  safeTransferFrom */\n      tag_77\n        /* \"contracts/ERC721A.sol\":23511:23550  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_144:\n        /* \"contracts/ERC721A.sol\":23370:23557  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":11819:11969  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"contracts/ERC721A.sol\":11891:11898  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11933:11960  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"contracts/ERC721A.sol\":11952:11959  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11933:11951  _packedOwnershipOf */\n      tag_119\n        /* \"contracts/ERC721A.sol\":11933:11960  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7473:7703  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/ERC721A.sol\":7545:7552  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":7568:7587  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7564:7624  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_148\n      jumpi\n        /* \"contracts/ERC721A.sol\":7596:7624  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7564:7624  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_148:\n      pop\n        /* \"contracts/ERC721A.sol\":7641:7666  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7641:7659  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":7641:7666  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7641:7696  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7473:7703  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10636:10738  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"contracts/ERC721A.sol\":10692:10705  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10724:10731  _symbol */\n      0x04\n        /* \"contracts/ERC721A.sol\":10717:10731  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17421:17744  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":17529:17549  _APPROVED_START_TIME */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":5267:5282  block.timestamp */\n      timestamp\n        /* \"contracts/ERC721A.sol\":17519:17549  getDate()<_APPROVED_START_TIME */\n      lt\n        /* \"contracts/ERC721A.sol\":17515:17598  if (getDate()<_APPROVED_START_TIME){... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/ERC721A.sol\":17571:17587  CanNotApproval() */\n      mload(0x40)\n      0xcfe89eac00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":17515:17598  if (getDate()<_APPROVED_START_TIME){... */\n    tag_157:\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17607:17646  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17607:17625  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":17607:17646  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/ERC721A.sol\":17607:17656  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17607:17667  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17682:17737  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17607:17656  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17682:17737  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"contracts/ERC721A.sol\":17682:17737  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17421:17744  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24138:24534  function safeTransferFrom(... */\n    tag_77:\n        /* \"contracts/ERC721A.sol\":24307:24338  transferFrom(from, to, tokenId) */\n      tag_162\n        /* \"contracts/ERC721A.sol\":24320:24324  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24326:24328  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24330:24337  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24307:24319  transferFrom */\n      tag_50\n        /* \"contracts/ERC721A.sol\":24307:24338  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ERC721A.sol\":24352:24366  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24352:24371  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24348:24528  if (to.code.length != 0)... */\n      tag_166\n      jumpi\n        /* \"contracts/ERC721A.sol\":24390:24446  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_164\n        /* \"contracts/ERC721A.sol\":24421:24425  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24427:24429  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24431:24438  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24440:24445  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24390:24420  _checkContractOnERC721Received */\n      tag_165\n        /* \"contracts/ERC721A.sol\":24390:24446  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/ERC721A.sol\":24385:24528  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_166\n      jumpi\n        /* \"contracts/ERC721A.sol\":24473:24513  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24385:24528  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_166:\n        /* \"contracts/ERC721A.sol\":24138:24534  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10839:11152  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":10912:10925  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10942:10958  _exists(tokenId) */\n      tag_168\n        /* \"contracts/ERC721A.sol\":10950:10957  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10942:10949  _exists */\n      tag_101\n        /* \"contracts/ERC721A.sol\":10942:10958  _exists(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/ERC721A.sol\":10937:10996  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_169\n      jumpi\n        /* \"contracts/ERC721A.sol\":10967:10996  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":10937:10996  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_169:\n        /* \"contracts/ERC721A.sol\":11007:11028  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":11031:11041  _baseURI() */\n      tag_170\n        /* \"contracts/ERC721A.sol\":11473:11482  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/ERC721A.sol\":11397:11489  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":11031:11041  _baseURI() */\n    tag_170:\n        /* \"contracts/ERC721A.sol\":11007:11041  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11064:11071  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11058:11079  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":11083:11084  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11058:11084  bytes(baseURI).length != 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":11058:11145  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_172\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_173)\n    tag_172:\n        /* \"contracts/ERC721A.sol\":11111:11118  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11120:11138  _toString(tokenId) */\n      tag_174\n        /* \"contracts/ERC721A.sol\":11130:11137  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11120:11129  _toString */\n      tag_175\n        /* \"contracts/ERC721A.sol\":11120:11138  _toString(tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/ERC721A.sol\":11094:11139  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":11058:11145  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_173:\n        /* \"contracts/ERC721A.sol\":11051:11145  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":10839:11152  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":18305:18582  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"contracts/ERC721A.sol\":18370:18374  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18457:18470  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":18447:18454  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18447:18470  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18405:18556  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18507:18533  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18507:18524  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":18507:18533  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":18507:18551  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18507:18556  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18305:18582  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12943:14192  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_119:\n        /* \"contracts/ERC721A.sol\":13010:13017  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13044:13051  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13142:13155  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":13135:13139  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13135:13155  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13131:14128  if (curr < _currentIndex) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/ERC721A.sol\":13179:13193  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13196:13219  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13196:13213  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":13196:13219  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":13283:13307  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":13283:13312  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"contracts/ERC721A.sol\":13279:14110  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_190\n      jumpi\n        /* \"contracts/ERC721A.sol\":13938:14049  while (packed == 0) {... */\n    tag_191:\n        /* \"contracts/ERC721A.sol\":13945:13951  packed */\n      dup1\n        /* \"contracts/ERC721A.sol\":13955:13956  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13945:13956  packed == 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":13938:14049  while (packed == 0) {... */\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":14015:14021  --curr */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"contracts/ERC721A.sol\":13997:14022  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13997:14014  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":13997:14022  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13938:14049  while (packed == 0) {... */\n      jump(tag_191)\n        /* \"contracts/ERC721A.sol\":13279:14110  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_190:\n        /* \"contracts/ERC721A.sol\":13157:14128  {... */\n      pop\n        /* \"contracts/ERC721A.sol\":13131:14128  if (curr < _currentIndex) {... */\n    tag_189:\n        /* \"contracts/ERC721A.sol\":14154:14185  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":26560:27257  function _checkContractOnERC721Received(... */\n    tag_165:\n        /* \"contracts/ERC721A.sol\":26738:26826  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26718:26722  bool */\n      0x00\n      swap1\n        /* \"contracts/ERC721A.sol\":26738:26783  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26738:26826  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_203\n      swap1\n        /* \"contracts/ERC721A.sol\":40135:40145  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26805:26809  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26811:26818  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26820:26825  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26738:26826  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_206\n      swap2\n      dup2\n      add\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"contracts/ERC721A.sol\":26734:27251  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_208\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_213\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_212)\n    tag_213:\n      0x60\n      swap2\n      pop\n    tag_212:\n      pop\n        /* \"contracts/ERC721A.sol\":27016:27022  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27016:27029  reason.length */\n      mload\n        /* \"contracts/ERC721A.sol\":27033:27034  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":27016:27034  reason.length == 0 */\n      sub\n        /* \"contracts/ERC721A.sol\":27012:27241  if (reason.length == 0) {... */\n      tag_214\n      jumpi\n        /* \"contracts/ERC721A.sol\":27061:27101  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27012:27241  if (reason.length == 0) {... */\n    tag_214:\n        /* \"contracts/ERC721A.sol\":27201:27207  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27195:27208  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27186:27192  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27182:27184  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27178:27193  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27171:27209  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26734:27251  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_208:\n        /* \"contracts/ERC721A.sol\":26894:26958  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"contracts/ERC721A.sol\":26904:26958  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"contracts/ERC721A.sol\":26894:26958  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26560:27257  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":40249:41957  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_175:\n        /* \"contracts/ERC721A.sol\":40314:40331  string memory str */\n      0x60\n        /* \"contracts/ERC721A.sol\":40742:40746  0xa0 */\n      0xa0\n        /* \"contracts/ERC721A.sol\":40735:40739  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":40729:40740  mload(0x40) */\n      mload\n        /* \"contracts/ERC721A.sol\":40725:40747  add(mload(0x40), 0xa0) */\n      add\n        /* \"contracts/ERC721A.sol\":40832:40833  m */\n      dup1\n        /* \"contracts/ERC721A.sol\":40826:40830  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":40819:40834  mstore(0x40, m) */\n      mstore\n        /* \"contracts/ERC721A.sol\":40905:40909  0x20 */\n      0x20\n        /* \"contracts/ERC721A.sol\":40902:40903  m */\n      dup2\n        /* \"contracts/ERC721A.sol\":40898:40910  sub(m, 0x20) */\n      sub\n        /* \"contracts/ERC721A.sol\":40891:40910  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":40985:40986  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":40980:40983  str */\n      dup2\n        /* \"contracts/ERC721A.sol\":40973:40987  mstore(str, 0) */\n      mstore\n        /* \"contracts/ERC721A.sol\":41086:41089  str */\n      dup1\n        /* \"contracts/ERC721A.sol\":41320:41325  value */\n      dup3\n        /* \"contracts/ERC721A.sol\":41302:41721  for { let temp := value } 1 {} {... */\n    tag_219:\n        /* \"contracts/ERC721A.sol\":41367:41368  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":41362:41365  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41358:41369  sub(str, 1) */\n      sub\n        /* \"contracts/ERC721A.sol\":41351:41369  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/ERC721A.sol\":41535:41537  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41529:41533  temp */\n      dup2\n        /* \"contracts/ERC721A.sol\":41525:41538  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC721A.sol\":41521:41523  48 */\n      0x30\n        /* \"contracts/ERC721A.sol\":41517:41539  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC721A.sol\":41512:41515  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41504:41540  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC721A.sol\":41627:41629  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41617:41630  div(temp, 10) */\n      swap1\n      div\n        /* \"contracts/ERC721A.sol\":41682:41707  if iszero(temp) { break } */\n      dup1\n        /* \"contracts/ERC721A.sol\":41302:41721  for { let temp := value } 1 {} {... */\n      tag_219\n        /* \"contracts/ERC721A.sol\":41682:41707  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"contracts/ERC721A.sol\":41749:41762  sub(end, str) */\n      dup2\n      swap1\n      sub\n        /* \"contracts/ERC721A.sol\":41862:41876  sub(str, 0x20) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC721A.sol\":41922:41941  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":41862:41876  sub(str, 0x20) */\n      swap2\n        /* \"contracts/ERC721A.sol\":40249:41957  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_224:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_231:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_233:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_173\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":638:888   */\n    tag_225:\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":733:846   */\n    tag_237:\n        /* \"#utility.yul\":747:753   */\n      dup4\n        /* \"#utility.yul\":744:745   */\n      dup2\n        /* \"#utility.yul\":741:754   */\n      lt\n        /* \"#utility.yul\":733:846   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":823:834   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":817:835   */\n      mload\n        /* \"#utility.yul\":804:815   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":797:836   */\n      mstore\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":762:772   */\n      add\n        /* \"#utility.yul\":733:846   */\n      jump(tag_237)\n    tag_239:\n      pop\n      pop\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":862:878   */\n      swap2\n      add\n        /* \"#utility.yul\":855:882   */\n      mstore\n        /* \"#utility.yul\":638:888   */\n      jump\t// out\n        /* \"#utility.yul\":893:1223   */\n    tag_226:\n        /* \"#utility.yul\":935:938   */\n      0x00\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":967:979   */\n      mload\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":995:998   */\n      dup5\n        /* \"#utility.yul\":988:1007   */\n      mstore\n        /* \"#utility.yul\":1016:1092   */\n      tag_241\n        /* \"#utility.yul\":1085:1091   */\n      dup2\n        /* \"#utility.yul\":1078:1082   */\n      0x20\n        /* \"#utility.yul\":1073:1076   */\n      dup7\n        /* \"#utility.yul\":1069:1083   */\n      add\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1055:1060   */\n      dup7\n        /* \"#utility.yul\":1051:1067   */\n      add\n        /* \"#utility.yul\":1016:1092   */\n      tag_225\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1112:1210   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1212:1216   */\n      0x20\n        /* \"#utility.yul\":1108:1217   */\n      add\n      swap3\n        /* \"#utility.yul\":893:1223   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1448   */\n    tag_30:\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup2\n        /* \"#utility.yul\":1359:1380   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x00\n        /* \"#utility.yul\":1397:1442   */\n      tag_173\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1397:1442   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":1453:1633   */\n    tag_34:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":1604:1627   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1453:1633   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1869:2065   */\n    tag_227:\n        /* \"#utility.yul\":1937:1957   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1997:2039   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1986:2040   */\n      dup2\n      and\n        /* \"#utility.yul\":1976:2041   */\n      dup2\n      eq\n        /* \"#utility.yul\":1966:2059   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2055:2056   */\n      0x00\n        /* \"#utility.yul\":2052:2053   */\n      dup1\n        /* \"#utility.yul\":2045:2057   */\n      revert\n        /* \"#utility.yul\":1966:2059   */\n    tag_248:\n        /* \"#utility.yul\":1869:2065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2324   */\n    tag_40:\n        /* \"#utility.yul\":2138:2144   */\n      0x00\n        /* \"#utility.yul\":2146:2152   */\n      dup1\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2178:2185   */\n      dup6\n        /* \"#utility.yul\":2174:2197   */\n      sub\n        /* \"#utility.yul\":2170:2202   */\n      slt\n        /* \"#utility.yul\":2167:2219   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2215:2216   */\n      0x00\n        /* \"#utility.yul\":2212:2213   */\n      dup1\n        /* \"#utility.yul\":2205:2217   */\n      revert\n        /* \"#utility.yul\":2167:2219   */\n    tag_250:\n        /* \"#utility.yul\":2238:2267   */\n      tag_251\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2238:2267   */\n      tag_227\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2228:2267   */\n      swap5\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2299:2317   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2286:2318   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2070:2324   */\n      jump\t// out\n        /* \"#utility.yul\":2511:2839   */\n    tag_49:\n        /* \"#utility.yul\":2588:2594   */\n      0x00\n        /* \"#utility.yul\":2596:2602   */\n      dup1\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2657:2659   */\n      0x60\n        /* \"#utility.yul\":2645:2654   */\n      dup5\n        /* \"#utility.yul\":2636:2643   */\n      dup7\n        /* \"#utility.yul\":2632:2655   */\n      sub\n        /* \"#utility.yul\":2628:2660   */\n      slt\n        /* \"#utility.yul\":2625:2677   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2673:2674   */\n      0x00\n        /* \"#utility.yul\":2670:2671   */\n      dup1\n        /* \"#utility.yul\":2663:2675   */\n      revert\n        /* \"#utility.yul\":2625:2677   */\n    tag_254:\n        /* \"#utility.yul\":2696:2725   */\n      tag_255\n        /* \"#utility.yul\":2715:2724   */\n      dup5\n        /* \"#utility.yul\":2696:2725   */\n      tag_227\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2686:2725   */\n      swap3\n      pop\n        /* \"#utility.yul\":2744:2782   */\n      tag_256\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2767:2776   */\n      dup6\n        /* \"#utility.yul\":2763:2781   */\n      add\n        /* \"#utility.yul\":2744:2782   */\n      tag_227\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2734:2782   */\n      swap2\n      pop\n        /* \"#utility.yul\":2829:2831   */\n      0x40\n        /* \"#utility.yul\":2818:2827   */\n      dup5\n        /* \"#utility.yul\":2814:2832   */\n      add\n        /* \"#utility.yul\":2801:2833   */\n      calldataload\n        /* \"#utility.yul\":2791:2833   */\n      swap1\n      pop\n        /* \"#utility.yul\":2511:2839   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2844:3030   */\n    tag_62:\n        /* \"#utility.yul\":2903:2909   */\n      0x00\n        /* \"#utility.yul\":2956:2958   */\n      0x20\n        /* \"#utility.yul\":2944:2953   */\n      dup3\n        /* \"#utility.yul\":2935:2942   */\n      dup5\n        /* \"#utility.yul\":2931:2954   */\n      sub\n        /* \"#utility.yul\":2927:2959   */\n      slt\n        /* \"#utility.yul\":2924:2976   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2972:2973   */\n      0x00\n        /* \"#utility.yul\":2969:2970   */\n      dup1\n        /* \"#utility.yul\":2962:2974   */\n      revert\n        /* \"#utility.yul\":2924:2976   */\n    tag_258:\n        /* \"#utility.yul\":2995:3024   */\n      tag_173\n        /* \"#utility.yul\":3014:3023   */\n      dup3\n        /* \"#utility.yul\":2995:3024   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":3035:3382   */\n    tag_72:\n        /* \"#utility.yul\":3100:3106   */\n      0x00\n        /* \"#utility.yul\":3108:3114   */\n      dup1\n        /* \"#utility.yul\":3161:3163   */\n      0x40\n        /* \"#utility.yul\":3149:3158   */\n      dup4\n        /* \"#utility.yul\":3140:3147   */\n      dup6\n        /* \"#utility.yul\":3136:3159   */\n      sub\n        /* \"#utility.yul\":3132:3164   */\n      slt\n        /* \"#utility.yul\":3129:3181   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3177:3178   */\n      0x00\n        /* \"#utility.yul\":3174:3175   */\n      dup1\n        /* \"#utility.yul\":3167:3179   */\n      revert\n        /* \"#utility.yul\":3129:3181   */\n    tag_261:\n        /* \"#utility.yul\":3200:3229   */\n      tag_262\n        /* \"#utility.yul\":3219:3228   */\n      dup4\n        /* \"#utility.yul\":3200:3229   */\n      tag_227\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3190:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3279:3281   */\n      0x20\n        /* \"#utility.yul\":3268:3277   */\n      dup4\n        /* \"#utility.yul\":3264:3282   */\n      add\n        /* \"#utility.yul\":3251:3283   */\n      calldataload\n        /* \"#utility.yul\":3326:3331   */\n      dup1\n        /* \"#utility.yul\":3319:3332   */\n      iszero\n        /* \"#utility.yul\":3312:3333   */\n      iszero\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3302:3334   */\n      eq\n        /* \"#utility.yul\":3292:3352   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3348:3349   */\n      0x00\n        /* \"#utility.yul\":3345:3346   */\n      dup1\n        /* \"#utility.yul\":3338:3350   */\n      revert\n        /* \"#utility.yul\":3292:3352   */\n    tag_263:\n        /* \"#utility.yul\":3371:3376   */\n      dup1\n        /* \"#utility.yul\":3361:3376   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3035:3382   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3571   */\n    tag_228:\n        /* \"#utility.yul\":3439:3516   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3429:3517   */\n      mstore\n        /* \"#utility.yul\":3536:3540   */\n      0x41\n        /* \"#utility.yul\":3533:3534   */\n      0x04\n        /* \"#utility.yul\":3526:3541   */\n      mstore\n        /* \"#utility.yul\":3560:3564   */\n      0x24\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3550:3565   */\n      revert\n        /* \"#utility.yul\":3576:4773   */\n    tag_76:\n        /* \"#utility.yul\":3671:3677   */\n      0x00\n        /* \"#utility.yul\":3679:3685   */\n      dup1\n        /* \"#utility.yul\":3687:3693   */\n      0x00\n        /* \"#utility.yul\":3695:3701   */\n      dup1\n        /* \"#utility.yul\":3748:3751   */\n      0x80\n        /* \"#utility.yul\":3736:3745   */\n      dup6\n        /* \"#utility.yul\":3727:3734   */\n      dup8\n        /* \"#utility.yul\":3723:3746   */\n      sub\n        /* \"#utility.yul\":3719:3752   */\n      slt\n        /* \"#utility.yul\":3716:3769   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3765:3766   */\n      0x00\n        /* \"#utility.yul\":3762:3763   */\n      dup1\n        /* \"#utility.yul\":3755:3767   */\n      revert\n        /* \"#utility.yul\":3716:3769   */\n    tag_266:\n        /* \"#utility.yul\":3788:3817   */\n      tag_267\n        /* \"#utility.yul\":3807:3816   */\n      dup6\n        /* \"#utility.yul\":3788:3817   */\n      tag_227\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3778:3817   */\n      swap4\n      pop\n        /* \"#utility.yul\":3836:3874   */\n      tag_268\n        /* \"#utility.yul\":3870:3872   */\n      0x20\n        /* \"#utility.yul\":3859:3868   */\n      dup7\n        /* \"#utility.yul\":3855:3873   */\n      add\n        /* \"#utility.yul\":3836:3874   */\n      tag_227\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3826:3874   */\n      swap3\n      pop\n        /* \"#utility.yul\":3921:3923   */\n      0x40\n        /* \"#utility.yul\":3910:3919   */\n      dup6\n        /* \"#utility.yul\":3906:3924   */\n      add\n        /* \"#utility.yul\":3893:3925   */\n      calldataload\n        /* \"#utility.yul\":3883:3925   */\n      swap2\n      pop\n        /* \"#utility.yul\":3976:3978   */\n      0x60\n        /* \"#utility.yul\":3965:3974   */\n      dup6\n        /* \"#utility.yul\":3961:3979   */\n      add\n        /* \"#utility.yul\":3948:3980   */\n      calldataload\n        /* \"#utility.yul\":3999:4017   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4040:4042   */\n      dup1\n        /* \"#utility.yul\":4032:4038   */\n      dup3\n        /* \"#utility.yul\":4029:4043   */\n      gt\n        /* \"#utility.yul\":4026:4060   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4056:4057   */\n      0x00\n        /* \"#utility.yul\":4053:4054   */\n      dup1\n        /* \"#utility.yul\":4046:4058   */\n      revert\n        /* \"#utility.yul\":4026:4060   */\n    tag_269:\n        /* \"#utility.yul\":4094:4100   */\n      dup2\n        /* \"#utility.yul\":4083:4092   */\n      dup8\n        /* \"#utility.yul\":4079:4101   */\n      add\n        /* \"#utility.yul\":4069:4101   */\n      swap2\n      pop\n        /* \"#utility.yul\":4139:4146   */\n      dup8\n        /* \"#utility.yul\":4132:4136   */\n      0x1f\n        /* \"#utility.yul\":4128:4130   */\n      dup4\n        /* \"#utility.yul\":4124:4137   */\n      add\n        /* \"#utility.yul\":4120:4147   */\n      slt\n        /* \"#utility.yul\":4110:4165   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4158:4159   */\n      dup1\n        /* \"#utility.yul\":4151:4163   */\n      revert\n        /* \"#utility.yul\":4110:4165   */\n    tag_270:\n        /* \"#utility.yul\":4197:4199   */\n      dup2\n        /* \"#utility.yul\":4184:4200   */\n      calldataload\n        /* \"#utility.yul\":4219:4221   */\n      dup2\n        /* \"#utility.yul\":4215:4217   */\n      dup2\n        /* \"#utility.yul\":4212:4222   */\n      gt\n        /* \"#utility.yul\":4209:4245   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4225:4243   */\n      tag_272\n      tag_228\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4359:4361   */\n      0x40\n        /* \"#utility.yul\":4353:4362   */\n      mload\n        /* \"#utility.yul\":4421:4425   */\n      0x1f\n        /* \"#utility.yul\":4413:4426   */\n      dup3\n      add\n        /* \"#utility.yul\":4264:4330   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4409:4431   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4433:4435   */\n      0x3f\n        /* \"#utility.yul\":4405:4436   */\n      add\n        /* \"#utility.yul\":4401:4441   */\n      and\n        /* \"#utility.yul\":4389:4442   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4457:4475   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4477:4499   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4454:4500   */\n      or\n        /* \"#utility.yul\":4451:4523   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4503:4521   */\n      tag_274\n      tag_228\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4543:4553   */\n      dup2\n        /* \"#utility.yul\":4539:4541   */\n      0x40\n        /* \"#utility.yul\":4532:4554   */\n      mstore\n        /* \"#utility.yul\":4578:4580   */\n      dup3\n        /* \"#utility.yul\":4570:4576   */\n      dup2\n        /* \"#utility.yul\":4563:4581   */\n      mstore\n        /* \"#utility.yul\":4618:4625   */\n      dup11\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4608:4610   */\n      dup5\n        /* \"#utility.yul\":4604:4606   */\n      dup8\n        /* \"#utility.yul\":4600:4611   */\n      add\n        /* \"#utility.yul\":4596:4616   */\n      add\n        /* \"#utility.yul\":4593:4626   */\n      gt\n        /* \"#utility.yul\":4590:4643   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4590:4643   */\n    tag_275:\n        /* \"#utility.yul\":4695:4697   */\n      dup3\n        /* \"#utility.yul\":4690:4692   */\n      0x20\n        /* \"#utility.yul\":4686:4688   */\n      dup7\n        /* \"#utility.yul\":4682:4693   */\n      add\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4669:4675   */\n      dup4\n        /* \"#utility.yul\":4665:4680   */\n      add\n        /* \"#utility.yul\":4652:4698   */\n      calldatacopy\n        /* \"#utility.yul\":4740:4741   */\n      0x00\n        /* \"#utility.yul\":4735:4737   */\n      0x20\n        /* \"#utility.yul\":4730:4732   */\n      dup5\n        /* \"#utility.yul\":4722:4728   */\n      dup4\n        /* \"#utility.yul\":4718:4733   */\n      add\n        /* \"#utility.yul\":4714:4738   */\n      add\n        /* \"#utility.yul\":4707:4742   */\n      mstore\n        /* \"#utility.yul\":4761:4767   */\n      dup1\n        /* \"#utility.yul\":4751:4767   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3576:4773   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4778:5038   */\n    tag_86:\n        /* \"#utility.yul\":4846:4852   */\n      0x00\n        /* \"#utility.yul\":4854:4860   */\n      dup1\n        /* \"#utility.yul\":4907:4909   */\n      0x40\n        /* \"#utility.yul\":4895:4904   */\n      dup4\n        /* \"#utility.yul\":4886:4893   */\n      dup6\n        /* \"#utility.yul\":4882:4905   */\n      sub\n        /* \"#utility.yul\":4878:4910   */\n      slt\n        /* \"#utility.yul\":4875:4927   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4923:4924   */\n      0x00\n        /* \"#utility.yul\":4920:4921   */\n      dup1\n        /* \"#utility.yul\":4913:4925   */\n      revert\n        /* \"#utility.yul\":4875:4927   */\n    tag_277:\n        /* \"#utility.yul\":4946:4975   */\n      tag_278\n        /* \"#utility.yul\":4965:4974   */\n      dup4\n        /* \"#utility.yul\":4946:4975   */\n      tag_227\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4936:4975   */\n      swap2\n      pop\n        /* \"#utility.yul\":4994:5032   */\n      tag_279\n        /* \"#utility.yul\":5028:5030   */\n      0x20\n        /* \"#utility.yul\":5017:5026   */\n      dup5\n        /* \"#utility.yul\":5013:5031   */\n      add\n        /* \"#utility.yul\":4994:5032   */\n      tag_227\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4984:5032   */\n      swap1\n      pop\n        /* \"#utility.yul\":4778:5038   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5480   */\n    tag_94:\n        /* \"#utility.yul\":5122:5123   */\n      0x01\n        /* \"#utility.yul\":5118:5130   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5165:5177   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5186:5247   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5240:5244   */\n      0x7f\n        /* \"#utility.yul\":5232:5238   */\n      dup3\n        /* \"#utility.yul\":5228:5245   */\n      and\n        /* \"#utility.yul\":5218:5245   */\n      swap2\n      pop\n        /* \"#utility.yul\":5186:5247   */\n    tag_281:\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5285:5291   */\n      dup3\n        /* \"#utility.yul\":5282:5296   */\n      lt\n        /* \"#utility.yul\":5262:5280   */\n      dup2\n        /* \"#utility.yul\":5259:5297   */\n      sub\n        /* \"#utility.yul\":5256:5474   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5330:5407   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5320:5408   */\n      mstore\n        /* \"#utility.yul\":5431:5435   */\n      0x22\n        /* \"#utility.yul\":5428:5429   */\n      0x04\n        /* \"#utility.yul\":5421:5436   */\n      mstore\n        /* \"#utility.yul\":5459:5463   */\n      0x24\n        /* \"#utility.yul\":5456:5457   */\n      0x00\n        /* \"#utility.yul\":5449:5464   */\n      revert\n        /* \"#utility.yul\":5256:5474   */\n    tag_282:\n      pop\n        /* \"#utility.yul\":5043:5480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5485:5981   */\n    tag_177:\n        /* \"#utility.yul\":5664:5667   */\n      0x00\n        /* \"#utility.yul\":5702:5708   */\n      dup4\n        /* \"#utility.yul\":5696:5709   */\n      mload\n        /* \"#utility.yul\":5718:5784   */\n      tag_284\n        /* \"#utility.yul\":5777:5783   */\n      dup2\n        /* \"#utility.yul\":5772:5775   */\n      dup5\n        /* \"#utility.yul\":5765:5769   */\n      0x20\n        /* \"#utility.yul\":5757:5763   */\n      dup9\n        /* \"#utility.yul\":5753:5770   */\n      add\n        /* \"#utility.yul\":5718:5784   */\n      tag_225\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5847:5860   */\n      dup4\n      mload\n        /* \"#utility.yul\":5806:5822   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5869:5939   */\n      tag_285\n        /* \"#utility.yul\":5847:5860   */\n      dup2\n        /* \"#utility.yul\":5806:5822   */\n      dup4\n        /* \"#utility.yul\":5916:5920   */\n      0x20\n        /* \"#utility.yul\":5904:5921   */\n      dup9\n      add\n        /* \"#utility.yul\":5869:5939   */\n      tag_225\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5955:5975   */\n      add\n      swap5\n        /* \"#utility.yul\":5485:5981   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6498   */\n    tag_204:\n        /* \"#utility.yul\":6180:6184   */\n      0x00\n        /* \"#utility.yul\":6209:6251   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6290:6292   */\n      dup1\n        /* \"#utility.yul\":6282:6288   */\n      dup8\n        /* \"#utility.yul\":6278:6293   */\n      and\n        /* \"#utility.yul\":6267:6276   */\n      dup4\n        /* \"#utility.yul\":6260:6294   */\n      mstore\n        /* \"#utility.yul\":6342:6344   */\n      dup1\n        /* \"#utility.yul\":6334:6340   */\n      dup7\n        /* \"#utility.yul\":6330:6345   */\n      and\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"#utility.yul\":6314:6323   */\n      dup5\n        /* \"#utility.yul\":6310:6328   */\n      add\n        /* \"#utility.yul\":6303:6346   */\n      mstore\n      pop\n        /* \"#utility.yul\":6382:6388   */\n      dup4\n        /* \"#utility.yul\":6377:6379   */\n      0x40\n        /* \"#utility.yul\":6366:6375   */\n      dup4\n        /* \"#utility.yul\":6362:6380   */\n      add\n        /* \"#utility.yul\":6355:6389   */\n      mstore\n        /* \"#utility.yul\":6425:6428   */\n      0x80\n        /* \"#utility.yul\":6420:6422   */\n      0x60\n        /* \"#utility.yul\":6409:6418   */\n      dup4\n        /* \"#utility.yul\":6405:6423   */\n      add\n        /* \"#utility.yul\":6398:6429   */\n      mstore\n        /* \"#utility.yul\":6446:6492   */\n      tag_287\n        /* \"#utility.yul\":6487:6490   */\n      0x80\n        /* \"#utility.yul\":6476:6485   */\n      dup4\n        /* \"#utility.yul\":6472:6491   */\n      add\n        /* \"#utility.yul\":6464:6470   */\n      dup5\n        /* \"#utility.yul\":6446:6492   */\n      tag_226\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6438:6492   */\n      swap7\n        /* \"#utility.yul\":5986:6498   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6752   */\n    tag_207:\n        /* \"#utility.yul\":6572:6578   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6604:6611   */\n      dup5\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6645   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":6641:6642   */\n      0x00\n        /* \"#utility.yul\":6638:6639   */\n      dup1\n        /* \"#utility.yul\":6631:6643   */\n      revert\n        /* \"#utility.yul\":6593:6645   */\n    tag_289:\n        /* \"#utility.yul\":6673:6682   */\n      dup2\n        /* \"#utility.yul\":6667:6683   */\n      mload\n        /* \"#utility.yul\":6692:6722   */\n      tag_173\n        /* \"#utility.yul\":6716:6721   */\n      dup2\n        /* \"#utility.yul\":6692:6722   */\n      tag_224\n      jump\t// in\n\n    auxdata: 0xa26469706673582212203777d3d935dc63467103cd0d2bb9d24a150278c61ac3ee0c75a20e6689818cbb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_181": {
									"entryPoint": null,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:2"
															},
															"nodeType": "YulIf",
															"src": "220:55:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:2",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:2"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:2"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:2"
															},
															"nodeType": "YulIf",
															"src": "353:36:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:2"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:2"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:2",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:2"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:2"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:2",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:2"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:2"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:2"
															},
															"nodeType": "YulIf",
															"src": "536:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:2",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:2"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:2"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:2"
															},
															"nodeType": "YulIf",
															"src": "698:53:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:2"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:2"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:2"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:2",
																"statements": []
															},
															"src": "779:133:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:2"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:2"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:2",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:2",
														"type": ""
													}
												],
												"src": "146:840:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:2"
															},
															"nodeType": "YulIf",
															"src": "1119:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:2"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:2",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:2"
															},
															"nodeType": "YulIf",
															"src": "1256:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:2"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:2"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:2"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:2"
															},
															"nodeType": "YulIf",
															"src": "1429:36:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:2"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:2"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:2",
														"type": ""
													}
												],
												"src": "991:562:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:2"
															},
															"nodeType": "YulIf",
															"src": "1701:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:2"
															},
															"nodeType": "YulIf",
															"src": "1771:161:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:2",
														"type": ""
													}
												],
												"src": "1558:380:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:2"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:2"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:2",
														"type": ""
													}
												],
												"src": "1943:121:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:2"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:2"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:2"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:2",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:2"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:2",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:2"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:2"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:2"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:2",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:2"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:2"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:2",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:2"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:2"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:2"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:2"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:2"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:2"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:2"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:2"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:2",
																			"statements": []
																		},
																		"src": "2516:82:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:2"
															},
															"nodeType": "YulIf",
															"src": "2160:448:2"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:2",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:2",
														"type": ""
													}
												],
												"src": "2069:545:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:2",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:2"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:2"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:2",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:2"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:2"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:2",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:2"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:2"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:2"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:2",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:2",
														"type": ""
													}
												],
												"src": "2619:166:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:2",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:2"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:2",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:2"
															},
															"nodeType": "YulIf",
															"src": "2929:56:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:2"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:2"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:2"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:2"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:2",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:2",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:2"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:2"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:2"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:2",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:2"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:2"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:2"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:2"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:2"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:2"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:2"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:2"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:2"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:2"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:2"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:2"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:2"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:2",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:2"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:2"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:2"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:2",
																					"statements": []
																				},
																				"src": "3376:236:2"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:2",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:2"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:2",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:2"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:2"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:2",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:2"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:2"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:2"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:2",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:2"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:2"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:2",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:2"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:2"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:2"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:2"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:2"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:2"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:2"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:2"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:2"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:2"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:2",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:2"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:2",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:2",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:2",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:2",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:2",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:2"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:2"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:2"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:2"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:2"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:2"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:2"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:2"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:2"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:2"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:2"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:2",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:2"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:2"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:2",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:2",
														"type": ""
													}
												],
												"src": "2790:1352:2"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600080553480156200001557600080fd5b506040516200153238038062001532833981016040819052620000389162000128565b600362000046838262000221565b50600462000055828262000221565b5050600060015550620002ed565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b81604052838152602092508683858801011115620000f057600080fd5b600091505b83821015620001145785820183015181830184015290820190620000f5565b600093810190920192909252949350505050565b600080604083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b620001628683870162000079565b935060208501519150808211156200017957600080fd5b50620001888582860162000079565b9150509250929050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c57600081815260208120601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d62000063565b62000255816200024e845462000192565b84620001ce565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61123580620002fd6000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610231578063b88d4fde14610251578063c87b56dd14610264578063e985e9c51461028457600080fd5b80636352211e146101dc57806370a08231146101fc57806395d89b411461021c57600080fd5b8063095ea7b3116100bb578063095ea7b31461017e57806318160ddd1461019357806323b872dd146101b657806342842e0e146101c957600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610e1e565b6102da565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c6103bf565b60405161010e9190610ea9565b34801561014557600080fd5b50610159610154366004610ebc565b610451565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61019161018c366004610efe565b6104bb565b005b34801561019f57600080fd5b50600254600154035b60405190815260200161010e565b6101916101c4366004610f28565b6105e2565b6101916101d7366004610f28565b610871565b3480156101e857600080fd5b506101596101f7366004610ebc565b610891565b34801561020857600080fd5b506101a8610217366004610f64565b61089c565b34801561022857600080fd5b5061012c61091e565b34801561023d57600080fd5b5061019161024c366004610f7f565b61092d565b61019161025f366004610fea565b610a00565b34801561027057600080fd5b5061012c61027f366004610ebc565b610a70565b34801561029057600080fd5b5061010261029f3660046110e4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061036d57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103b957507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600380546103ce90611117565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90611117565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045c82610b1a565b610492576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081526007602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000544210156104f7576040517fcfe89eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061050282610891565b90503373ffffffffffffffffffffffffffffffffffffffff8216146105615761052b813361029f565b610561576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526007602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006105ed82610b5b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610654576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260076020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176106c757610691863361029f565b6106c7576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610714576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561071f57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600560205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361080e5760018401600081815260056020526040812054900361080c57600154811461080c5760008181526005602052604090208490555b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61088c83838360405180602001604052806000815250610a00565b505050565b60006103b982610b5b565b600073ffffffffffffffffffffffffffffffffffffffff82166108eb576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205467ffffffffffffffff1690565b6060600480546103ce90611117565b600054421015610969576040517fcfe89eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a0b8484846105e2565b73ffffffffffffffffffffffffffffffffffffffff83163b15610a6a57610a3484848484610c12565b610a6a576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060610a7b82610b1a565b610ab1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ac860408051602081019091526000815290565b90508051600003610ae85760405180602001604052806000815250610b13565b80610af284610d8b565b604051602001610b0392919061116a565b6040516020818303038152906040525b9392505050565b6000600154821080156103b95750506000908152600560205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b600081600154811015610be057600081815260056020526040812054907c010000000000000000000000000000000000000000000000000000000082169003610bde575b80600003610b1357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600081815260056020526040902054610b9f565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610c6d903390899088908890600401611199565b6020604051808303816000875af1925050508015610cc6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610cc3918101906111e2565b60015b610d3d573d808015610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b508051600003610d35576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610da557508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610e1b57600080fd5b50565b600060208284031215610e3057600080fd5b8135610b1381610ded565b60005b83811015610e56578181015183820152602001610e3e565b50506000910152565b60008151808452610e77816020860160208601610e3b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610b136020830184610e5f565b600060208284031215610ece57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ef957600080fd5b919050565b60008060408385031215610f1157600080fd5b610f1a83610ed5565b946020939093013593505050565b600080600060608486031215610f3d57600080fd5b610f4684610ed5565b9250610f5460208501610ed5565b9150604084013590509250925092565b600060208284031215610f7657600080fd5b610b1382610ed5565b60008060408385031215610f9257600080fd5b610f9b83610ed5565b915060208301358015158114610fb057600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561100057600080fd5b61100985610ed5565b935061101760208601610ed5565b925060408501359150606085013567ffffffffffffffff8082111561103b57600080fd5b818701915087601f83011261104f57600080fd5b81358181111561106157611061610fbb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156110a7576110a7610fbb565b816040528281528a60208487010111156110c057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110f757600080fd5b61110083610ed5565b915061110e60208401610ed5565b90509250929050565b600181811c9082168061112b57607f821691505b602082108103611164577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000835161117c818460208801610e3b565b835190830190611190818360208801610e3b565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526111d86080830184610e5f565b9695505050505050565b6000602082840312156111f457600080fd5b8151610b1381610ded56fea26469706673582212203777d3d935dc63467103cd0d2bb9d24a150278c61ac3ee0c75a20e6689818cbb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1532 CODESIZE SUB DUP1 PUSH3 0x1532 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x128 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x46 DUP4 DUP3 PUSH3 0x221 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x55 DUP3 DUP3 PUSH3 0x221 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x1 SSTORE POP PUSH3 0x2ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA8 JUMPI PUSH3 0xA8 PUSH3 0x63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xD3 JUMPI PUSH3 0xD3 PUSH3 0x63 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x114 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF5 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x162 DUP7 DUP4 DUP8 ADD PUSH3 0x79 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x188 DUP6 DUP3 DUP7 ADD PUSH3 0x79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x218 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x203 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x23D JUMPI PUSH3 0x23D PUSH3 0x63 JUMP JUMPDEST PUSH3 0x255 DUP2 PUSH3 0x24E DUP5 SLOAD PUSH3 0x192 JUMP JUMPDEST DUP5 PUSH3 0x1CE JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x28D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x274 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x218 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2BE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x29D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2DD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1235 DUP1 PUSH3 0x2FD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x91E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x1117 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x1117 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE89EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x502 DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x561 JUMPI PUSH2 0x52B DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6C7 JUMPI PUSH2 0x691 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x80E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x80C JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE89EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA0B DUP5 DUP5 DUP5 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA34 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7B DUP3 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB13 JUMP JUMPDEST DUP1 PUSH2 0xAF2 DUP5 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB03 SWAP3 SWAP2 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x3B9 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 SUB PUSH2 0xBDE JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB13 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB9F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC6D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD3D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xDA5 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB13 DUP2 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE56 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE77 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1A DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF46 DUP5 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP PUSH2 0xF54 PUSH1 0x20 DUP6 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB13 DUP3 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9B DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1009 DUP6 PUSH2 0xED5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1017 PUSH1 0x20 DUP7 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A7 PUSH2 0xFBB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1100 DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x110E PUSH1 0x20 DUP5 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x112B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1164 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x117C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xE3B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1190 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xE3B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x11D8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB13 DUP2 PUSH2 0xDED JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH24 0xD3D935DC63467103CD0D2BB9D24A150278C61AC3EE0C75A2 0xE PUSH7 0x89818CBB64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "895:41064:0:-:0;;;3670:1;3633:38;;5040:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5106:5;:13;5114:5;5106;:13;:::i;:::-;-1:-1:-1;5129:7:0;:17;5139:7;5129;:17;:::i;:::-;-1:-1:-1;;5910:7:0;5156:13;:31;-1:-1:-1;895:41064:0;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:2:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:2;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:2;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:2;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:2;;;3992:26;3943:89;-1:-1:-1;;2747:1:2;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:2;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:2;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:2;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:2:o;:::-;895:41064:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1060": {
									"entryPoint": null,
									"id": 1060,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_439": {
									"entryPoint": null,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1047": {
									"entryPoint": null,
									"id": 1047,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1115": {
									"entryPoint": 3090,
									"id": 1115,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_799": {
									"entryPoint": 2842,
									"id": 799,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1621": {
									"entryPoint": null,
									"id": 1621,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1664": {
									"entryPoint": null,
									"id": 1664,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1654": {
									"entryPoint": null,
									"id": 1654,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_633": {
									"entryPoint": null,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_567": {
									"entryPoint": 2907,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_181": {
									"entryPoint": null,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1674": {
									"entryPoint": 3467,
									"id": 1674,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_697": {
									"entryPoint": 1211,
									"id": 697,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_254": {
									"entryPoint": 2204,
									"id": 254,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_720": {
									"entryPoint": 1105,
									"id": 720,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDate_154": {
									"entryPoint": null,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_773": {
									"entryPoint": null,
									"id": 773,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_377": {
									"entryPoint": 959,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_459": {
									"entryPoint": 2193,
									"id": 459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1034": {
									"entryPoint": 2560,
									"id": 1034,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_996": {
									"entryPoint": 2161,
									"id": 996,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_755": {
									"entryPoint": 2349,
									"id": 755,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_367": {
									"entryPoint": 730,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_387": {
									"entryPoint": 2334,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_430": {
									"entryPoint": 2672,
									"id": 430,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_977": {
									"entryPoint": 1506,
									"id": 977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6754:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:133:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "99:66:2",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:97:2"
															},
															"nodeType": "YulIf",
															"src": "68:117:2"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:176:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "311:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "323:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "307:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:32:2"
															},
															"nodeType": "YulIf",
															"src": "275:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "340:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:30:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "420:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "430:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "231:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "242:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "254:6:2",
														"type": ""
													}
												],
												"src": "196:245:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:92:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "551:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "574:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "586:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "521:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "532:4:2",
														"type": ""
													}
												],
												"src": "446:187:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "704:184:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "714:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "723:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "718:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "783:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "813:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "804:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "804:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "827:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "832:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "823:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "823:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "817:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "747:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "741:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "741:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "755:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "757:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "766:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "769:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "762:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "762:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "757:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "737:3:2",
																"statements": []
															},
															"src": "733:113:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "862:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "855:27:2"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "682:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "687:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "692:6:2",
														"type": ""
													}
												],
												"src": "638:250:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:280:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "953:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "957:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "995:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "988:19:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:16:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1078:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:14:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1085:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1016:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:76:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1016:76:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1101:116:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1116:3:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:98:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:109:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "920:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "927:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:2",
														"type": ""
													}
												],
												"src": "893:330:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:99:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:21:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1389:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:45:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1389:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1318:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1329:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1340:4:2",
														"type": ""
													}
												],
												"src": "1228:220:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1569:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:32:2"
															},
															"nodeType": "YulIf",
															"src": "1533:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1594:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1604:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1489:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1500:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1512:6:2",
														"type": ""
													}
												],
												"src": "1453:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1749:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1749:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1814:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1708:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1719:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:2",
														"type": ""
													}
												],
												"src": "1638:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1928:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1928:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2043:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2052:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2045:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2045:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1990:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1997:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1986:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1986:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1976:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1976:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:73:2"
															},
															"nodeType": "YulIf",
															"src": "1966:93:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1897:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:2",
														"type": ""
													}
												],
												"src": "1869:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2157:167:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2203:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2215:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2205:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2205:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:32:2"
															},
															"nodeType": "YulIf",
															"src": "2167:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2257:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2238:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2276:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2314:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2286:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2115:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2126:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2138:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2146:6:2",
														"type": ""
													}
												],
												"src": "2070:254:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2440:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2452:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2440:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2475:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2399:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2410:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2421:4:2",
														"type": ""
													}
												],
												"src": "2329:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2615:224:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2661:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2670:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2673:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2663:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2663:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2663:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2636:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2632:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2657:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2628:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:32:2"
															},
															"nodeType": "YulIf",
															"src": "2625:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2686:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2715:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2696:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2734:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2763:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2744:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2791:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2829:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2814:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2565:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2576:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2588:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2596:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2604:6:2",
														"type": ""
													}
												],
												"src": "2511:328:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:116:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2960:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2935:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2944:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2931:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:32:2"
															},
															"nodeType": "YulIf",
															"src": "2924:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2985:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3014:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2995:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2880:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2891:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2903:6:2",
														"type": ""
													}
												],
												"src": "2844:186:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3165:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3177:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3167:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3167:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3167:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3140:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3136:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:32:2"
															},
															"nodeType": "YulIf",
															"src": "3129:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3190:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3219:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3200:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3238:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3279:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3251:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:32:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3242:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3336:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3345:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3348:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3338:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3338:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3338:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3305:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3326:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3319:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3319:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3312:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3312:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3302:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3302:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:40:2"
															},
															"nodeType": "YulIf",
															"src": "3292:60:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3361:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3371:5:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3077:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3088:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3100:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3108:6:2",
														"type": ""
													}
												],
												"src": "3035:347:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3439:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3526:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3526:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3550:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3387:184:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3706:1067:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3753:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3755:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3755:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3727:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3736:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:33:2"
															},
															"nodeType": "YulIf",
															"src": "3716:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3778:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3807:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3788:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3859:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3855:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3883:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3921:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3893:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3934:46:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3965:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3976:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3961:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3948:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:32:2"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3938:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3989:28:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3999:18:2",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3993:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4044:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4053:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4056:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4046:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4046:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4046:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4032:6:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4040:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4029:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:14:2"
															},
															"nodeType": "YulIf",
															"src": "4026:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4069:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4083:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4094:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:22:2"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4073:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4149:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4158:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4161:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4151:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4151:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4151:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4128:2:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4132:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4124:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4124:13:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:35:2"
															},
															"nodeType": "YulIf",
															"src": "4110:55:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4174:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4197:2:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4184:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:16:2"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4178:2:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4223:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4225:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4225:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4225:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4215:2:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4219:2:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4212:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:10:2"
															},
															"nodeType": "YulIf",
															"src": "4209:36:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4254:76:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4264:66:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4258:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4339:23:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4359:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4353:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:9:2"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4343:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4371:71:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4393:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4417:2:2"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4421:4:2",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4413:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4413:13:2"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4428:2:2"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4409:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4409:22:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4433:2:2",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4405:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4405:31:2"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4438:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:40:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4389:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:53:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4375:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4501:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4503:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4503:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4460:10:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4472:2:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4457:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4480:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4477:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4454:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:46:2"
															},
															"nodeType": "YulIf",
															"src": "4451:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4543:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:22:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:2"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4578:2:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:18:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4604:2:2"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4608:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4600:11:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:20:2"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4618:7:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4593:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:33:2"
															},
															"nodeType": "YulIf",
															"src": "4590:53:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4669:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:15:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4686:2:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:11:2"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4695:2:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:2"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4730:2:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4718:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4718:15:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4735:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:24:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4707:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4751:16:2",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4761:6:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3648:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3659:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3671:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3679:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3687:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3695:6:2",
														"type": ""
													}
												],
												"src": "3576:1197:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4865:173:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4911:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4920:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4923:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4913:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4913:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4913:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4886:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4882:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4907:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:32:2"
															},
															"nodeType": "YulIf",
															"src": "4875:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4936:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4965:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4946:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5017:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5028:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5013:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4994:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4823:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4834:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4846:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4854:6:2",
														"type": ""
													}
												],
												"src": "4778:260:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5098:382:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5108:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5139:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5169:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5175:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5165:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5143:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5216:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5218:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5232:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5240:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5228:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5228:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5218:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5196:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:26:2"
															},
															"nodeType": "YulIf",
															"src": "5186:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5306:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5327:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5330:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5320:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5320:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5428:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5431:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5421:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5421:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5421:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5456:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5459:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5449:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5449:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5449:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5262:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5282:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5259:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5259:38:2"
															},
															"nodeType": "YulIf",
															"src": "5256:218:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5078:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5087:6:2",
														"type": ""
													}
												],
												"src": "5043:437:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5672:309:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5702:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5696:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5686:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5757:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5765:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5753:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5753:17:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5777:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5718:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:66:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5718:66:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5793:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5810:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5806:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:16:2"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5797:5:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5831:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5847:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:13:2"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5835:8:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5908:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5916:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5904:17:2"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5923:5:2"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5930:8:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5869:34:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:70:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5869:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5959:5:2"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5966:8:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:20:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5640:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5645:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5653:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5664:3:2",
														"type": ""
													}
												],
												"src": "5485:496:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:309:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6199:52:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6209:42:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6203:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6267:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6290:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6314:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6325:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6310:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6334:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6342:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6330:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6303:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6420:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6405:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6398:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6438:54:2",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6464:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6476:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6487:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6446:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:46:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6438:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6134:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6145:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6153:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6161:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6169:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6180:4:2",
														"type": ""
													}
												],
												"src": "5986:512:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6583:169:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6629:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6638:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6641:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:32:2"
															},
															"nodeType": "YulIf",
															"src": "6593:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6654:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6667:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6658:5:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6716:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6692:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6692:30:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6731:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6741:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6549:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6560:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6572:6:2",
														"type": ""
													}
												],
												"src": "6503:249:2"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610231578063b88d4fde14610251578063c87b56dd14610264578063e985e9c51461028457600080fd5b80636352211e146101dc57806370a08231146101fc57806395d89b411461021c57600080fd5b8063095ea7b3116100bb578063095ea7b31461017e57806318160ddd1461019357806323b872dd146101b657806342842e0e146101c957600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610e1e565b6102da565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c6103bf565b60405161010e9190610ea9565b34801561014557600080fd5b50610159610154366004610ebc565b610451565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61019161018c366004610efe565b6104bb565b005b34801561019f57600080fd5b50600254600154035b60405190815260200161010e565b6101916101c4366004610f28565b6105e2565b6101916101d7366004610f28565b610871565b3480156101e857600080fd5b506101596101f7366004610ebc565b610891565b34801561020857600080fd5b506101a8610217366004610f64565b61089c565b34801561022857600080fd5b5061012c61091e565b34801561023d57600080fd5b5061019161024c366004610f7f565b61092d565b61019161025f366004610fea565b610a00565b34801561027057600080fd5b5061012c61027f366004610ebc565b610a70565b34801561029057600080fd5b5061010261029f3660046110e4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260086020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061036d57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103b957507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600380546103ce90611117565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90611117565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045c82610b1a565b610492576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081526007602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000544210156104f7576040517fcfe89eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061050282610891565b90503373ffffffffffffffffffffffffffffffffffffffff8216146105615761052b813361029f565b610561576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281526007602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006105ed82610b5b565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610654576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082815260076020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176106c757610691863361029f565b6106c7576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610714576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801561071f57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526006602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600560205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361080e5760018401600081815260056020526040812054900361080c57600154811461080c5760008181526005602052604090208490555b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61088c83838360405180602001604052806000815250610a00565b505050565b60006103b982610b5b565b600073ffffffffffffffffffffffffffffffffffffffff82166108eb576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff1660009081526006602052604090205467ffffffffffffffff1690565b6060600480546103ce90611117565b600054421015610969576040517fcfe89eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260086020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a0b8484846105e2565b73ffffffffffffffffffffffffffffffffffffffff83163b15610a6a57610a3484848484610c12565b610a6a576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060610a7b82610b1a565b610ab1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ac860408051602081019091526000815290565b90508051600003610ae85760405180602001604052806000815250610b13565b80610af284610d8b565b604051602001610b0392919061116a565b6040516020818303038152906040525b9392505050565b6000600154821080156103b95750506000908152600560205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b600081600154811015610be057600081815260056020526040812054907c010000000000000000000000000000000000000000000000000000000082169003610bde575b80600003610b1357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01600081815260056020526040902054610b9f565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610c6d903390899088908890600401611199565b6020604051808303816000875af1925050508015610cc6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610cc3918101906111e2565b60015b610d3d573d808015610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b508051600003610d35576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610da557508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610e1b57600080fd5b50565b600060208284031215610e3057600080fd5b8135610b1381610ded565b60005b83811015610e56578181015183820152602001610e3e565b50506000910152565b60008151808452610e77816020860160208601610e3b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610b136020830184610e5f565b600060208284031215610ece57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ef957600080fd5b919050565b60008060408385031215610f1157600080fd5b610f1a83610ed5565b946020939093013593505050565b600080600060608486031215610f3d57600080fd5b610f4684610ed5565b9250610f5460208501610ed5565b9150604084013590509250925092565b600060208284031215610f7657600080fd5b610b1382610ed5565b60008060408385031215610f9257600080fd5b610f9b83610ed5565b915060208301358015158114610fb057600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561100057600080fd5b61100985610ed5565b935061101760208601610ed5565b925060408501359150606085013567ffffffffffffffff8082111561103b57600080fd5b818701915087601f83011261104f57600080fd5b81358181111561106157611061610fbb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156110a7576110a7610fbb565b816040528281528a60208487010111156110c057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110f757600080fd5b61110083610ed5565b915061110e60208401610ed5565b90509250929050565b600181811c9082168061112b57607f821691505b602082108103611164577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000835161117c818460208801610e3b565b835190830190611190818360208801610e3b565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526111d86080830184610e5f565b9695505050505050565b6000602082840312156111f457600080fd5b8151610b1381610ded56fea26469706673582212203777d3d935dc63467103cd0d2bb9d24a150278c61ac3ee0c75a20e6689818cbb64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x91E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF7F JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10E4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x1117 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x1117 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE89EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x502 DUP3 PUSH2 0x891 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ PUSH2 0x561 JUMPI PUSH2 0x52B DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5ED DUP3 PUSH2 0xB5B JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x6C7 JUMPI PUSH2 0x691 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x80E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x80C JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x80C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA00 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE89EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA0B DUP5 DUP5 DUP5 PUSH2 0x5E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH2 0xA34 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA7B DUP3 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0xAB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAC8 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB13 JUMP JUMPDEST DUP1 PUSH2 0xAF2 DUP5 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB03 SWAP3 SWAP2 SWAP1 PUSH2 0x116A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x3B9 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 SUB PUSH2 0xBDE JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0xB13 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB9F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC6D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC3 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD3D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xDA5 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB13 DUP2 PUSH2 0xDED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE56 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE77 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF1A DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF46 DUP5 PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP PUSH2 0xF54 PUSH1 0x20 DUP6 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB13 DUP3 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9B DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1009 DUP6 PUSH2 0xED5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1017 PUSH1 0x20 DUP7 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A7 PUSH2 0xFBB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1100 DUP4 PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH2 0x110E PUSH1 0x20 DUP5 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x112B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1164 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x117C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xE3B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1190 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xE3B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x11D8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB13 DUP2 PUSH2 0xDED JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH24 0xD3D935DC63467103CD0D2BB9D24A150278C61AC3EE0C75A2 0xE PUSH7 0x89818CBB64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "895:41064:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9583:630;;;;;;;;;;-1:-1:-1;9583:630:0;;;;;:::i;:::-;;:::i;:::-;;;611:14:2;;604:22;586:41;;574:2;559:18;9583:630:0;;;;;;;;10467:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16880:214::-;;;;;;;;;;-1:-1:-1;16880:214:0;;;;;:::i;:::-;;:::i;:::-;;;1814:42:2;1802:55;;;1784:74;;1772:2;1757:18;16880:214:0;1638:226:2;16240:490:0;;;;;;:::i;:::-;;:::i;:::-;;6322:317;;;;;;;;;;-1:-1:-1;6592:12:0;;6576:13;;:28;6322:317;;;2475:25:2;;;2463:2;2448:18;6322:317:0;2329:177:2;20515:2764:0;;;;;;:::i;:::-;;:::i;23370:187::-;;;;;;:::i;:::-;;:::i;11819:150::-;;;;;;;;;;-1:-1:-1;11819:150:0;;;;;:::i;:::-;;:::i;7473:230::-;;;;;;;;;;-1:-1:-1;7473:230:0;;;;;:::i;:::-;;:::i;10636:102::-;;;;;;;;;;;;;:::i;17421:323::-;;;;;;;;;;-1:-1:-1;17421:323:0;;;;;:::i;:::-;;:::i;24138:396::-;;;;;;:::i;:::-;;:::i;10839:313::-;;;;;;;;;;-1:-1:-1;10839:313:0;;;;;:::i;:::-;;:::i;17894:162::-;;;;;;;;;;-1:-1:-1;17894:162:0;;;;;:::i;:::-;18014:25;;;;17991:4;18014:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17894:162;9583:630;9668:4;9986:25;;;;;;:101;;-1:-1:-1;10062:25:0;;;;;9986:101;:177;;;-1:-1:-1;10138:25:0;;;;;9986:177;9967:196;9583:630;-1:-1:-1;;9583:630:0:o;10467:98::-;10521:13;10553:5;10546:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10467:98;:::o;16880:214::-;16956:7;16980:16;16988:7;16980;:16::i;:::-;16975:64;;17005:34;;;;;;;;;;;;;;16975:64;-1:-1:-1;17057:24:0;;;;:15;:24;;;;;:30;;;;16880:214::o;16240:490::-;16342:20;;5267:15;16332:30;16328:83;;;16384:16;;;;;;;;;;;;;;16328:83;16420:13;16436:16;16444:7;16436;:16::i;:::-;16420:32;-1:-1:-1;40135:10:0;16467:28;;;;16463:172;;16514:44;16531:5;40135:10;17894:162;:::i;16514:44::-;16509:126;;16585:35;;;;;;;;;;;;;;16509:126;16645:24;;;;:15;:24;;;;;;:35;;;;;;;;;;;;;;16695:28;;16645:24;;16695:28;;;;;;;16318:412;16240:490;;:::o;20515:2764::-;20652:27;20682;20701:7;20682:18;:27::i;:::-;20652:57;;20765:4;20724:45;;20740:19;20724:45;;;20720:86;;20778:28;;;;;;;;;;;;;;20720:86;20818:27;19648:24;;;:15;:24;;;;;19872:26;;40135:10;19285:30;;;18993:16;18982:28;;19263:20;;;19260:56;21001:179;;21093:43;21110:4;40135:10;17894:162;:::i;21093:43::-;21088:92;;21145:35;;;;;;;;;;;;;;21088:92;21195:16;;;21191:52;;21220:23;;;;;;;;;;;;;;21191:52;21386:15;21383:157;;;21524:1;21503:19;21496:30;21383:157;21912:24;;;;;;;;:18;:24;;;;;;21910:26;;;;;;21980:22;;;;;;;;;21978:24;;-1:-1:-1;21978:24:0;;;15131:11;15106:23;15102:41;15089:63;2392:8;15089:63;22266:26;;;;:17;:26;;;;;:172;;;;2392:8;22555:47;;:52;;22551:617;;22659:1;22649:11;;22627:19;22780:30;;;:17;:30;;;;;;:35;;22776:378;;22916:13;;22901:11;:28;22897:239;;23061:30;;;;:17;:30;;;;;:52;;;22897:239;22609:559;22551:617;23212:7;23208:2;23193:27;;23202:4;23193:27;;;;;;;;;;;;20642:2637;;;20515:2764;;;:::o;23370:187::-;23511:39;23528:4;23534:2;23538:7;23511:39;;;;;;;;;;;;:16;:39::i;:::-;23370:187;;;:::o;11819:150::-;11891:7;11933:27;11952:7;11933:18;:27::i;7473:230::-;7545:7;7568:19;;;7564:60;;7596:28;;;;;;;;;;;;;;7564:60;-1:-1:-1;7641:25:0;;;;;;:18;:25;;;;;;1360:13;7641:55;;7473:230::o;10636:102::-;10692:13;10724:7;10717:14;;;;;:::i;17421:323::-;17529:20;;5267:15;17519:30;17515:83;;;17571:16;;;;;;;;;;;;;;17515:83;40135:10;17607:39;;;;:18;:39;;;;;;;;;:49;;;;;;;;;;;;:60;;;;;;;;;;;;;17682:55;;586:41:2;;;17607:49:0;;40135:10;17682:55;;559:18:2;17682:55:0;;;;;;;17421:323;;:::o;24138:396::-;24307:31;24320:4;24326:2;24330:7;24307:12;:31::i;:::-;24352:14;;;;:19;24348:180;;24390:56;24421:4;24427:2;24431:7;24440:5;24390:30;:56::i;:::-;24385:143;;24473:40;;;;;;;;;;;;;;24385:143;24138:396;;;;:::o;10839:313::-;10912:13;10942:16;10950:7;10942;:16::i;:::-;10937:59;;10967:29;;;;;;;;;;;;;;10937:59;11007:21;11031:10;11473:9;;;;;;;;;-1:-1:-1;11473:9:0;;;11397:92;11031:10;11007:34;;11064:7;11058:21;11083:1;11058:26;:87;;;;;;;;;;;;;;;;;11111:7;11120:18;11130:7;11120:9;:18::i;:::-;11094:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11058:87;11051:94;10839:313;-1:-1:-1;;;10839:313:0:o;18305:277::-;18370:4;18457:13;;18447:7;:23;18405:151;;;;-1:-1:-1;;18507:26:0;;;;:17;:26;;;;;;2118:8;18507:44;:49;;18305:277::o;12943:1249::-;13010:7;13044;13142:13;;13135:4;:20;13131:997;;;13179:14;13196:23;;;:17;:23;;;;;;;2118:8;13283:24;;:29;;13279:831;;13938:111;13945:6;13955:1;13945:11;13938:111;;-1:-1:-1;14015:6:0;;13997:25;;;;:17;:25;;;;;;13938:111;;13279:831;13157:971;13131:997;14154:31;;;;;;;;;;;;;;26560:697;26738:88;;;;;26718:4;;26738:45;;;;;;:88;;40135:10;;26805:4;;26811:7;;26820:5;;26738:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26738:88:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26734:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27016:6;:13;27033:1;27016:18;27012:229;;27061:40;;;;;;;;;;;;;;27012:229;27201:6;27195:13;27186:6;27182:2;27178:15;27171:38;26734:517;26894:64;;26904:54;26894:64;;-1:-1:-1;26560:697:0;;;;;;:::o;40249:1708::-;40314:17;40742:4;40735;40729:11;40725:22;40832:1;40826:4;40819:15;40905:4;40902:1;40898:12;40891:19;;;40985:1;40980:3;40973:14;41086:3;41320:5;41302:419;41367:1;41362:3;41358:11;41351:18;;41535:2;41529:4;41525:13;41521:2;41517:22;41512:3;41504:36;41627:2;41617:13;;41682:25;41302:419;41682:25;-1:-1:-1;41749:13:0;;;41862:14;;;;41922:19;;;41862:14;40249:1708;-1:-1:-1;40249:1708:0:o;14:177:2:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:2;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:2:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:180::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:23:2;;1453:180;-1:-1:-1;1453:180:2:o;1869:196::-;1937:20;;1997:42;1986:54;;1976:65;;1966:93;;2055:1;2052;2045:12;1966:93;1869:196;;;:::o;2070:254::-;2138:6;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;2238:29;2257:9;2238:29;:::i;:::-;2228:39;2314:2;2299:18;;;;2286:32;;-1:-1:-1;;;2070:254:2:o;2511:328::-;2588:6;2596;2604;2657:2;2645:9;2636:7;2632:23;2628:32;2625:52;;;2673:1;2670;2663:12;2625:52;2696:29;2715:9;2696:29;:::i;:::-;2686:39;;2744:38;2778:2;2767:9;2763:18;2744:38;:::i;:::-;2734:48;;2829:2;2818:9;2814:18;2801:32;2791:42;;2511:328;;;;;:::o;2844:186::-;2903:6;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;3035:347::-;3100:6;3108;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;3200:29;3219:9;3200:29;:::i;:::-;3190:39;;3279:2;3268:9;3264:18;3251:32;3326:5;3319:13;3312:21;3305:5;3302:32;3292:60;;3348:1;3345;3338:12;3292:60;3371:5;3361:15;;;3035:347;;;;;:::o;3387:184::-;3439:77;3436:1;3429:88;3536:4;3533:1;3526:15;3560:4;3557:1;3550:15;3576:1197;3671:6;3679;3687;3695;3748:3;3736:9;3727:7;3723:23;3719:33;3716:53;;;3765:1;3762;3755:12;3716:53;3788:29;3807:9;3788:29;:::i;:::-;3778:39;;3836:38;3870:2;3859:9;3855:18;3836:38;:::i;:::-;3826:48;;3921:2;3910:9;3906:18;3893:32;3883:42;;3976:2;3965:9;3961:18;3948:32;3999:18;4040:2;4032:6;4029:14;4026:34;;;4056:1;4053;4046:12;4026:34;4094:6;4083:9;4079:22;4069:32;;4139:7;4132:4;4128:2;4124:13;4120:27;4110:55;;4161:1;4158;4151:12;4110:55;4197:2;4184:16;4219:2;4215;4212:10;4209:36;;;4225:18;;:::i;:::-;4359:2;4353:9;4421:4;4413:13;;4264:66;4409:22;;;4433:2;4405:31;4401:40;4389:53;;;4457:18;;;4477:22;;;4454:46;4451:72;;;4503:18;;:::i;:::-;4543:10;4539:2;4532:22;4578:2;4570:6;4563:18;4618:7;4613:2;4608;4604;4600:11;4596:20;4593:33;4590:53;;;4639:1;4636;4629:12;4590:53;4695:2;4690;4686;4682:11;4677:2;4669:6;4665:15;4652:46;4740:1;4735:2;4730;4722:6;4718:15;4714:24;4707:35;4761:6;4751:16;;;;;;;3576:1197;;;;;;;:::o;4778:260::-;4846:6;4854;4907:2;4895:9;4886:7;4882:23;4878:32;4875:52;;;4923:1;4920;4913:12;4875:52;4946:29;4965:9;4946:29;:::i;:::-;4936:39;;4994:38;5028:2;5017:9;5013:18;4994:38;:::i;:::-;4984:48;;4778:260;;;;;:::o;5043:437::-;5122:1;5118:12;;;;5165;;;5186:61;;5240:4;5232:6;5228:17;5218:27;;5186:61;5293:2;5285:6;5282:14;5262:18;5259:38;5256:218;;5330:77;5327:1;5320:88;5431:4;5428:1;5421:15;5459:4;5456:1;5449:15;5256:218;;5043:437;;;:::o;5485:496::-;5664:3;5702:6;5696:13;5718:66;5777:6;5772:3;5765:4;5757:6;5753:17;5718:66;:::i;:::-;5847:13;;5806:16;;;;5869:70;5847:13;5806:16;5916:4;5904:17;;5869:70;:::i;:::-;5955:20;;5485:496;-1:-1:-1;;;;5485:496:2:o;5986:512::-;6180:4;6209:42;6290:2;6282:6;6278:15;6267:9;6260:34;6342:2;6334:6;6330:15;6325:2;6314:9;6310:18;6303:43;;6382:6;6377:2;6366:9;6362:18;6355:34;6425:3;6420:2;6409:9;6405:18;6398:31;6446:46;6487:3;6476:9;6472:19;6464:6;6446:46;:::i;:::-;6438:54;5986:512;-1:-1:-1;;;;;;5986:512:2:o;6503:249::-;6572:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:52;;;6641:1;6638;6631:12;6593:52;6673:9;6667:16;6692:30;6716:5;6692:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "932200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2604",
								"getApproved(uint256)": "6895",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "28705",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4331",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getApprovedStartTime()": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setApprovedStartTime(uint256)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite",
								"getDate()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3633,
									"end": 3671,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3633,
									"end": 3671,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5040,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5040,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5106,
									"end": 5111,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5106,
									"end": 5119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5114,
									"end": 5119,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5106,
									"end": 5111,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5106,
									"end": 5119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5106,
									"end": 5119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5106,
									"end": 5119,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5106,
									"end": 5119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5129,
									"end": 5136,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5129,
									"end": 5146,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5139,
									"end": 5146,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5129,
									"end": 5136,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5129,
									"end": 5146,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5129,
									"end": 5146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5129,
									"end": 5146,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5129,
									"end": 5146,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5910,
									"end": 5917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5156,
									"end": 5169,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5156,
									"end": 5187,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 2,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 2,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41959,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203777d3d935dc63467103cd0d2bb9d24a150278c61ac3ee0c75a20e6689818cbb64736f6c63430008110033",
									".code": [
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 41959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9583,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9583,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10467,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10467,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16880,
											"end": 17094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16880,
											"end": 17094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1858,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1864,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16240,
											"end": 16730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16240,
											"end": 16730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6592,
											"end": 6604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6576,
											"end": 6589,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6576,
											"end": 6589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6576,
											"end": 6604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6322,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2329,
											"end": 2506,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 20515,
											"end": 23279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 20515,
											"end": 23279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23370,
											"end": 23557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23370,
											"end": 23557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11819,
											"end": 11969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11819,
											"end": 11969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7473,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7473,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10636,
											"end": 10738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 17421,
											"end": 17744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17421,
											"end": 17744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24138,
											"end": 24534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24138,
											"end": 24534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10839,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10839,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17894,
											"end": 18056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17991,
											"end": 17995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18032,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18014,
											"end": 18049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9668,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9986,
											"end": 10087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10087,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10062,
											"end": 10087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10062,
											"end": 10087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10062,
											"end": 10087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10087,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9986,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9986,
											"end": 10163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10138,
											"end": 10163,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10138,
											"end": 10163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10138,
											"end": 10163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10138,
											"end": 10163,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9986,
											"end": 10163,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9986,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9967,
											"end": 10163,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 10213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9583,
											"end": 10213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10521,
											"end": 10534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10553,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10546,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10546,
											"end": 10558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10546,
											"end": 10558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10467,
											"end": 10565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16880,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16956,
											"end": 16963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16980,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16988,
											"end": 16995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16980,
											"end": 16996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16980,
											"end": 16996,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16980,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16975,
											"end": 17039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17005,
											"end": 17039,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17039,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16975,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17072,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17057,
											"end": 17087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17057,
											"end": 17087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16880,
											"end": 17094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5282,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16332,
											"end": 16362,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16328,
											"end": 16411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16328,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16328,
											"end": 16411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "PUSH",
											"source": 0,
											"value": "CFE89EAC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16328,
											"end": 16411,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16328,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16420,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16436,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16444,
											"end": 16451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16436,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16436,
											"end": 16452,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16436,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16420,
											"end": 16452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16495,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16467,
											"end": 16495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16463,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16463,
											"end": 16635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16514,
											"end": 16558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16531,
											"end": 16536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17894,
											"end": 18056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16514,
											"end": 16558,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16514,
											"end": 16558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16509,
											"end": 16635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16509,
											"end": 16635,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16509,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16660,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16645,
											"end": 16669,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16695,
											"end": 16723,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 16318,
											"end": 16730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16240,
											"end": 16730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20652,
											"end": 20679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20682,
											"end": 20709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20701,
											"end": 20708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20682,
											"end": 20709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20682,
											"end": 20709,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20682,
											"end": 20709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20652,
											"end": 20709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20652,
											"end": 20709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20765,
											"end": 20769,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20724,
											"end": 20769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20740,
											"end": 20759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20724,
											"end": 20769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20724,
											"end": 20769,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20720,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20720,
											"end": 20806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20778,
											"end": 20806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20720,
											"end": 20806,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20720,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19663,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 19898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 19898,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19285,
											"end": 19315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18993,
											"end": 19009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18982,
											"end": 19010,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18982,
											"end": 19010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19260,
											"end": 19316,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21001,
											"end": 21180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21110,
											"end": 21114,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17894,
											"end": 18056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17894,
											"end": 18056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21093,
											"end": 21136,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21093,
											"end": 21136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21088,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21088,
											"end": 21180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21088,
											"end": 21180,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 21088,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21195,
											"end": 21211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21195,
											"end": 21211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21191,
											"end": 21243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21220,
											"end": 21243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21191,
											"end": 21243,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21191,
											"end": 21243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21383,
											"end": 21540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21524,
											"end": 21525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21503,
											"end": 21522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21496,
											"end": 21526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21383,
											"end": 21540,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21383,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21930,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21912,
											"end": 21936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21980,
											"end": 22002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 22002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 22002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21978,
											"end": 22002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 22002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21978,
											"end": 22002,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15131,
											"end": 15142,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15106,
											"end": 15129,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15102,
											"end": 15143,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15089,
											"end": 15152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15089,
											"end": 15152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22283,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22266,
											"end": 22438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22555,
											"end": 22602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22555,
											"end": 22602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22555,
											"end": 22607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22555,
											"end": 22607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22551,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 22551,
											"end": 23168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22659,
											"end": 22660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22649,
											"end": 22660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22649,
											"end": 22660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22627,
											"end": 22646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22797,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22780,
											"end": 22815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22776,
											"end": 23154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22776,
											"end": 23154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22916,
											"end": 22929,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22916,
											"end": 22929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22901,
											"end": 22912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22901,
											"end": 22929,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 23136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22897,
											"end": 23136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23078,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23091,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23061,
											"end": 23113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22897,
											"end": 23136,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 22897,
											"end": 23136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22609,
											"end": 23168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22551,
											"end": 23168,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 22551,
											"end": 23168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 23219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23208,
											"end": 23210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23206,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23193,
											"end": 23220,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 23279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23528,
											"end": 23532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23536,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23538,
											"end": 23545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23511,
											"end": 23550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23511,
											"end": 23550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11819,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11891,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11952,
											"end": 11959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11933,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11933,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7473,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7568,
											"end": 7587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7473,
											"end": 7703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10636,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10692,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10724,
											"end": 10731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10717,
											"end": 10731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17529,
											"end": 17549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5267,
											"end": 5282,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17519,
											"end": 17549,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17515,
											"end": 17598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "CFE89EAC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17515,
											"end": 17598,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17515,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17625,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17667,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17607,
											"end": 17656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17682,
											"end": 17737,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24307,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24320,
											"end": 24324,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24328,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24330,
											"end": 24337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24307,
											"end": 24319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24307,
											"end": 24338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24307,
											"end": 24338,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24307,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24366,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24348,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24348,
											"end": 24528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24390,
											"end": 24446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24421,
											"end": 24425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24427,
											"end": 24429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24431,
											"end": 24438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24440,
											"end": 24445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24390,
											"end": 24420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 24390,
											"end": 24446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24390,
											"end": 24446,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24390,
											"end": 24446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24385,
											"end": 24528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24473,
											"end": 24513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24385,
											"end": 24528,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24385,
											"end": 24528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24138,
											"end": 24534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10942,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10950,
											"end": 10957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 10949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10942,
											"end": 10958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 10958,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10942,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10937,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10937,
											"end": 10996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10937,
											"end": 10996,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10937,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11397,
											"end": 11489,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11031,
											"end": 11041,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11031,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11058,
											"end": 11084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11111,
											"end": 11118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11130,
											"end": 11137,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11120,
											"end": 11138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11120,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11094,
											"end": 11139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11094,
											"end": 11139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11058,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11051,
											"end": 11145,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10839,
											"end": 11152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10839,
											"end": 11152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18305,
											"end": 18582,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 18305,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18370,
											"end": 18374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18457,
											"end": 18470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18457,
											"end": 18470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18447,
											"end": 18454,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18447,
											"end": 18470,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18405,
											"end": 18556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18405,
											"end": 18556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18405,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18405,
											"end": 18556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18507,
											"end": 18551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18507,
											"end": 18556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18305,
											"end": 18582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12943,
											"end": 14192,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12943,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13135,
											"end": 13155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 14128,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13131,
											"end": 14128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13213,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13196,
											"end": 13219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13283,
											"end": 13307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13279,
											"end": 14110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13279,
											"end": 14110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13945,
											"end": 13951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13945,
											"end": 13956,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14015,
											"end": 14021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14015,
											"end": 14021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14014,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 14022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13938,
											"end": 14049,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13279,
											"end": 14110,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13279,
											"end": 14110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 14128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 14128,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13131,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26718,
											"end": 26722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26718,
											"end": 26722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 26738,
											"end": 26783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26809,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26805,
											"end": 26809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26818,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26811,
											"end": 26818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26820,
											"end": 26825,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26820,
											"end": 26825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26738,
											"end": 26826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26738,
											"end": 26826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26738,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27016,
											"end": 27022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27016,
											"end": 27029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27033,
											"end": 27034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27016,
											"end": 27034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27012,
											"end": 27241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27012,
											"end": 27241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27061,
											"end": 27101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27012,
											"end": 27241,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27012,
											"end": 27241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27201,
											"end": 27207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27195,
											"end": 27208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27186,
											"end": 27192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27182,
											"end": 27184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27178,
											"end": 27193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26734,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26894,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26894,
											"end": 26958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26904,
											"end": 26958,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26894,
											"end": 26958,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26894,
											"end": 26958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26560,
											"end": 27257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 41957,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40249,
											"end": 41957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40314,
											"end": 40331,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40742,
											"end": 40746,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 40735,
											"end": 40739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40729,
											"end": 40740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40725,
											"end": 40747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40832,
											"end": 40833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40826,
											"end": 40830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40819,
											"end": 40834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40905,
											"end": 40909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40902,
											"end": 40903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40898,
											"end": 40910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40891,
											"end": 40910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40891,
											"end": 40910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40891,
											"end": 40910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40985,
											"end": 40986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40980,
											"end": 40983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40973,
											"end": 40987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41086,
											"end": 41089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41320,
											"end": 41325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41302,
											"end": 41721,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 41302,
											"end": 41721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41367,
											"end": 41368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41362,
											"end": 41365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41358,
											"end": 41369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41351,
											"end": 41369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41351,
											"end": 41369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41535,
											"end": 41537,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 41529,
											"end": 41533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 41521,
											"end": 41523,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41517,
											"end": 41539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41512,
											"end": 41515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41540,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 41627,
											"end": 41629,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 41617,
											"end": 41630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41617,
											"end": 41630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41682,
											"end": 41707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41302,
											"end": 41721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 41682,
											"end": 41707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41749,
											"end": 41762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41749,
											"end": 41762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 41862,
											"end": 41876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41922,
											"end": 41941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41922,
											"end": 41941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41922,
											"end": 41941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40249,
											"end": 41957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40249,
											"end": 41957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 638,
											"end": 888,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 638,
											"end": 888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 741,
											"end": 754,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 733,
											"end": 846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 823,
											"end": 834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 804,
											"end": 815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 797,
											"end": 836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 855,
											"end": 882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 638,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 967,
											"end": 979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1016,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 893,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1397,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1986,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2041,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 2065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2197,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2202,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2238,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2318,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2286,
											"end": 2318,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2659,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2636,
											"end": 2643,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2655,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2660,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2715,
											"end": 2724,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2696,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2744,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2833,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 3030,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2844,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2958,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2954,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2959,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2974,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2995,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3140,
											"end": 3147,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3200,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3312,
											"end": 3333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3334,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3571,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3387,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3439,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3540,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 3541,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3687,
											"end": 3693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3788,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3817,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3870,
											"end": 3872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3836,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3874,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3893,
											"end": 3925,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3976,
											"end": 3978,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 3980,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4043,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4079,
											"end": 4101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4069,
											"end": 4101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4069,
											"end": 4101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4120,
											"end": 4147,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4212,
											"end": 4222,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4225,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4413,
											"end": 4426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4500,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4503,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4543,
											"end": 4553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4625,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4626,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4669,
											"end": 4675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4737,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4714,
											"end": 4738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4707,
											"end": 4742,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4904,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4893,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4910,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 4925,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4965,
											"end": 4974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4946,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 4975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 4975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 5028,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4994,
											"end": 5032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 5032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 5038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5296,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5259,
											"end": 5297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5330,
											"end": 5407,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5459,
											"end": 5463,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5043,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5772,
											"end": 5775,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5753,
											"end": 5770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5718,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5916,
											"end": 5920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5869,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5955,
											"end": 5975,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6278,
											"end": 6293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6267,
											"end": 6276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6260,
											"end": 6294,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6303,
											"end": 6346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6355,
											"end": 6389,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 6428,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6420,
											"end": 6422,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6487,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6476,
											"end": 6485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6446,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6438,
											"end": 6492,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5986,
											"end": 6498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6503,
											"end": 6752,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6503,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6631,
											"end": 6643,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6667,
											"end": 6683,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6692,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6716,
											"end": 6721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6692,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6692,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC721A.sol",
								"contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CanNotApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/ERC721A.sol\":{\"keccak256\":\"0x2b7c7ddc8d5fee96090e7d8d3c7a09c059f2fd5936b2a605f512811149644900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817adf7b4b581354a59f45f763053c44ef2f72aaa5a7e5873545f45a7f63f276\",\"dweb:/ipfs/QmVHgJ3X7hNXW91FvnW8C5mURG5XYoAgtxUTEsLroNT93D\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0xd90944728591e10a4d978003f3e5560e09b0948d8cfc6fa441fe1ab8fe3ee416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2bef828ca3e091a66134a193d3a27a045dc547b980c99969702786c9d65308b\",\"dweb:/ipfs/QmdweKBSvXdsgKFifx1zAkKwvpnmmMkY18CuykT7Nd8GzG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 92,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_APPROVED_START_TIME",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 94,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 96,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 98,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 100,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 104,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 108,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 113,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)"
							},
							{
								"astId": 119,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)23_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)23_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 22,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/ERC721A.sol\":{\"keccak256\":\"0x2b7c7ddc8d5fee96090e7d8d3c7a09c059f2fd5936b2a605f512811149644900\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817adf7b4b581354a59f45f763053c44ef2f72aaa5a7e5873545f45a7f63f276\",\"dweb:/ipfs/QmVHgJ3X7hNXW91FvnW8C5mURG5XYoAgtxUTEsLroNT93D\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0xd90944728591e10a4d978003f3e5560e09b0948d8cfc6fa441fe1ab8fe3ee416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2bef828ca3e091a66134a193d3a27a045dc547b980c99969702786c9d65308b\",\"dweb:/ipfs/QmdweKBSvXdsgKFifx1zAkKwvpnmmMkY18CuykT7Nd8GzG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CanNotApproval",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CanNotApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0xd90944728591e10a4d978003f3e5560e09b0948d8cfc6fa441fe1ab8fe3ee416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2bef828ca3e091a66134a193d3a27a045dc547b980c99969702786c9d65308b\",\"dweb:/ipfs/QmdweKBSvXdsgKFifx1zAkKwvpnmmMkY18CuykT7Nd8GzG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1675
						],
						"ERC721A__IERC721Receiver": [
							17
						],
						"IERC721A": [
							1883
						]
					},
					"id": 1676,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:0"
						},
						{
							"absolutePath": "contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1676,
							"sourceUnit": 1884,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:0",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "336:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:0"
									},
									"scope": 17,
									"src": "228:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1676,
							"src": "187:203:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IERC721A",
										"nameLocations": [
											"915:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1883,
										"src": "915:8:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:0",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1675,
							"linearizedBaseContracts": [
								1675,
								1883
							],
							"name": "ERC721A",
							"nameLocation": "904:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1049:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:0",
									"nodeType": "StructDefinition",
									"scope": 1675,
									"src": "1015:54:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1305:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 28,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1446:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1570:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1686:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1816:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 45,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "1953:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2075:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 54,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2207:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2339:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2467:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 75,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2609:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 72,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 73,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "2741:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 80,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 81,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3116:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3091:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3151:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 89,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3302:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3277:127:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 87,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3277:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3338:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "_APPROVED_START_TIME",
									"nameLocation": "3647:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3633:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3633:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3670:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 94,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3732:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3716:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3716:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3804:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3788:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 95,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3788:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3856:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3841:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 97,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3841:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3903:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "3888:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 99,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3888:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4330:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "4294:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 103,
										"keyType": {
											"id": 101,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4302:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4294:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 102,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4313:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 108,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4589:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "4553:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 107,
										"keyType": {
											"id": 105,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4561:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4553:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 106,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4572:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 113,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4709:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "4664:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 112,
										"keyType": {
											"id": 109,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4672:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4664:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 111,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 110,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4683:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "4683:16:0"
											},
											"referencedDeclaration": 23,
											"src": "4683:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4832:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1675,
									"src": "4779:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 114,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4787:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4779:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 117,
											"keyType": {
												"id": 115,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4806:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4798:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 116,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4817:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "5096:98:0",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "5106:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "5114:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5106:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "5106:13:0"
											},
											{
												"expression": {
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "5129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 131,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "5139:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5129:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "5129:17:0"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "5156:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 135,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5172:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5172:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5156:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5156:31:0"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5066:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5052:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5073:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5051:44:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5096:0:0"
									},
									"scope": 1675,
									"src": "5040:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5245:66:0",
										"statements": [
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "5260:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "5255:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 145,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5255:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"expression": {
														"id": 147,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "5267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5273:9:0",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "5267:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5255:27:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 150,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5299:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 151,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 152,
												"nodeType": "Return",
												"src": "5292:12:0"
											}
										]
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDate",
									"nameLocation": "5208:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5215:2:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5240:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5239:6:0"
									},
									"scope": 1675,
									"src": "5199:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "5375:44:0",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "_APPROVED_START_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "5385:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5408:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5385:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5385:27:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovedStartTime",
									"nameLocation": "5326:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "5353:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "5348:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5347:11:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5375:0:0"
									},
									"scope": 1675,
									"src": "5317:102:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "5485:44:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_APPROVED_START_TIME",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "5502:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "5495:27:0"
											}
										]
									},
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedStartTime",
									"nameLocation": "5434:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5455:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:6:0"
									},
									"scope": 1675,
									"src": "5425:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5919:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5936:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "5929:8:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5724:125:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5863:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:2:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5910:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:9:0"
									},
									"scope": 1675,
									"src": "5854:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "6082:37:0",
										"statements": [
											{
												"expression": {
													"id": 187,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "6099:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 186,
												"id": 188,
												"nodeType": "Return",
												"src": "6092:20:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5950:63:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6027:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6039:2:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "6073:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6072:9:0"
									},
									"scope": 1675,
									"src": "6018:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1734
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "6392:247:0",
										"statements": [
											{
												"id": 204,
												"nodeType": "UncheckedBlock",
												"src": "6545:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 197,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "6576:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 198,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "6592:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6576:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 200,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "6607:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6607:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6576:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 196,
														"id": 203,
														"nodeType": "Return",
														"src": "6569:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "6125:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6331:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6365:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6342:2:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "6383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6382:9:0"
									},
									"scope": 1675,
									"src": "6322:317:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "6796:226:0",
										"statements": [
											{
												"id": 217,
												"nodeType": "UncheckedBlock",
												"src": "6943:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "6974:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "6990:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6990:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6974:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 211,
														"id": 216,
														"nodeType": "Return",
														"src": "6967:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "6645:82:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6741:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6753:2:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "6787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6786:9:0"
									},
									"scope": 1675,
									"src": "6732:290:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "7163:36:0",
										"statements": [
											{
												"expression": {
													"id": 225,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 96,
													"src": "7180:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 226,
												"nodeType": "Return",
												"src": "7173:19:0"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "7028:66:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "7108:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7120:2:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7153:9:0"
									},
									"scope": 1675,
									"src": "7099:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1777
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "7554:149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "7568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7585:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7577:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7577:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7568:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "IfStatement",
												"src": "7564:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 243,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "7596:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7596:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 245,
													"nodeType": "RevertStatement",
													"src": "7589:35:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "7641:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7641:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 250,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7669:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7641:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 252,
												"nodeType": "Return",
												"src": "7634:62:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "7394:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7482:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7527:8:0"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:15:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7545:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:9:0"
									},
									"scope": 1675,
									"src": "7473:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "7850:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 262,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "7868:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 264,
																	"indexExpression": {
																		"id": 263,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "7887:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7868:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 265,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7897:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7868:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 267,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7867:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 268,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7922:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7867:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 270,
												"nodeType": "Return",
												"src": "7860:89:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "7709:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7789:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7802:15:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7840:9:0"
									},
									"scope": 1675,
									"src": "7780:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "8119:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 280,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "8137:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"id": 281,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "8156:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8137:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 283,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "8166:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8137:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 285,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8136:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 286,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "8191:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8136:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 279,
												"id": 288,
												"nodeType": "Return",
												"src": "8129:89:0"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "7962:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "8058:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "8072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8071:15:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "8110:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8109:9:0"
									},
									"scope": 1675,
									"src": "8049:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "8401:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 300,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "8425:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 302,
																"indexExpression": {
																	"id": 301,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "8444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8425:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 303,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "8454:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8425:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8418:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 298,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8418:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8418:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 297,
												"id": 306,
												"nodeType": "Return",
												"src": "8411:55:0"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "8231:102:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8347:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8363:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8355:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:15:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "8393:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 295,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8392:8:0"
									},
									"scope": 1675,
									"src": "8338:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "8716:334:0",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8734:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "8726:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"baseExpression": {
														"id": 318,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "8743:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 320,
													"indexExpression": {
														"id": 319,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "8762:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8743:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8726:42:0"
											},
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8786:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "8778:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8778:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"nodeType": "VariableDeclarationStatement",
												"src": "8778:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8878:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8892:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8905:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8892:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 313,
														"isOffset": false,
														"isSlot": false,
														"src": "8905:3:0",
														"valueSize": 1
													},
													{
														"declaration": 323,
														"isOffset": false,
														"isSlot": false,
														"src": "8892:9:0",
														"valueSize": 1
													}
												],
												"id": 325,
												"nodeType": "InlineAssembly",
												"src": "8869:49:0"
											},
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "8927:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 327,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "8937:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 328,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "8946:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8937:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 330,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8936:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "8974:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 332,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8987:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8974:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 334,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8973:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8936:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8927:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "8927:72:0"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 338,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "9009:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 340,
														"indexExpression": {
															"id": 339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "9028:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9009:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 341,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "9037:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9009:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "9009:34:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "8479:171:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8664:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "8672:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8694:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "8687:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 312,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8671:27:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8716:0:0"
									},
									"scope": 1675,
									"src": "8655:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1742
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "9674:539:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 354,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "9986:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10001:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9986:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "10062:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10077:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10062:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9986:101:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 361,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "10138:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10153:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "10138:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9986:177:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 353,
												"id": 365,
												"nodeType": "Return",
												"src": "9967:196:0"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "9237:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9592:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 350,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9650:8:0"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9617:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9610:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9609:20:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "9668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9667:6:0"
									},
									"scope": 1675,
									"src": "9583:630:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "10536:29:0",
										"statements": [
											{
												"expression": {
													"id": 374,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 98,
													"src": "10553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 373,
												"id": 375,
												"nodeType": "Return",
												"src": "10546:12:0"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "10404:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10476:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 370,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10503:8:0"
									},
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10480:2:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "10521:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10521:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10520:15:0"
									},
									"scope": 1675,
									"src": "10467:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1863
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "10707:31:0",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "10724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "10717:14:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "10571:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10645:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10674:8:0"
									},
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10651:2:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "10692:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10692:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10691:15:0"
									},
									"scope": 1675,
									"src": "10636:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1871
									],
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "10927:225:0",
										"statements": [
											{
												"condition": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10941:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 397,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "10950:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 396,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10942:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "10937:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 400,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "10967:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10967:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 402,
													"nodeType": "RevertStatement",
													"src": "10960:36:0"
												}
											},
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11021:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "11007:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 404,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 406,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "11031:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11031:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11007:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 411,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11064:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11058:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11058:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11058:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11073:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11058:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11083:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11058:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11143:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11058:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 420,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "11111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 422,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "11130:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 421,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "11120:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 418,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11094:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11098:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11094:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11094:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 416,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11087:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11087:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 395,
												"id": 428,
												"nodeType": "Return",
												"src": "11051:94:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "10744:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10848:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10894:8:0"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "10857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10856:17:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "10912:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10911:15:0"
									},
									"scope": 1675,
									"src": "10839:313:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "11463:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11480:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 435,
												"id": 437,
												"nodeType": "Return",
												"src": "11473:9:0"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "11158:234:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11406:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11414:2:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "11448:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11448:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11447:15:0"
									},
									"scope": 1675,
									"src": "11397:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1785
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "11900:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 453,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "11952:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 452,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "11933:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11933:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 450,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11925:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11925:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11917:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11917:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 447,
												"id": 457,
												"nodeType": "Return",
												"src": "11910:52:0"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "11683:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11828:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 444,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11873:8:0"
									},
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11835:17:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11890:9:0"
									},
									"scope": 1675,
									"src": "11819:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "12245:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 470,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "12300:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 469,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "12281:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12281:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "12262:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1728_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12262:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "12255:54:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "11975:172:0",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12161:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12182:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "12174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12173:17:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "12222:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 464,
														"name": "TokenOwnership",
														"nameLocations": [
															"12222:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "12222:14:0"
													},
													"referencedDeclaration": 1728,
													"src": "12222:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1728_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12221:23:0"
									},
									"scope": 1675,
									"src": "12152:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "12498:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 485,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "12534:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 487,
															"indexExpression": {
																"id": 486,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "12552:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12534:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "12515:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1728_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12515:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "12508:51:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "12322:80:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12416:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "12429:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12428:15:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "12475:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "TokenOwnership",
														"nameLocations": [
															"12475:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "12475:14:0"
													},
													"referencedDeclaration": 1728,
													"src": "12475:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1728_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12474:23:0"
									},
									"scope": 1675,
									"src": "12407:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "12738:128:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 497,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "12752:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 499,
														"indexExpression": {
															"id": 498,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "12770:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12752:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12780:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12752:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "12748:112:0",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "12783:77:0",
													"statements": [
														{
															"expression": {
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 502,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "12797:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 504,
																	"indexExpression": {
																		"id": 503,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "12815:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12797:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 506,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "12843:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 505,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "12824:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12824:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12797:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 509,
															"nodeType": "ExpressionStatement",
															"src": "12797:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "12572:97:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12683:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12714:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "12706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12705:15:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12738:0:0"
									},
									"scope": 1675,
									"src": "12674:192:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "13019:1173:0",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "13037:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "13029:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"id": 523,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 516,
													"src": "13044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13029:22:0"
											},
											{
												"id": 562,
												"nodeType": "UncheckedBlock",
												"src": "13062:1076:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 525,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "13090:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13090:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 527,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "13109:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13090:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 561,
														"nodeType": "IfStatement",
														"src": "13086:1042:0",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 529,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "13135:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 530,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "13142:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13135:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 560,
															"nodeType": "IfStatement",
															"src": "13131:997:0",
															"trueBody": {
																"id": 559,
																"nodeType": "Block",
																"src": "13157:971:0",
																"statements": [
																	{
																		"assignments": [
																			533
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 533,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13187:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 559,
																				"src": "13179:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 532,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13179:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 537,
																		"initialValue": {
																			"baseExpression": {
																				"id": 534,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 104,
																				"src": "13196:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 536,
																			"indexExpression": {
																				"id": 535,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "13214:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13196:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13179:40:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 538,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 533,
																					"src": "13283:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 539,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "13292:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13283:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13283:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 558,
																		"nodeType": "IfStatement",
																		"src": "13279:831:0",
																		"trueBody": {
																			"id": 557,
																			"nodeType": "Block",
																			"src": "13314:796:0",
																			"statements": [
																				{
																					"body": {
																						"id": 553,
																						"nodeType": "Block",
																						"src": "13958:91:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 551,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 546,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 533,
																										"src": "13988:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 547,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 104,
																											"src": "13997:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 550,
																										"indexExpression": {
																											"id": 549,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "14015:6:0",
																											"subExpression": {
																												"id": 548,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 522,
																												"src": "14017:4:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13997:25:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13988:34:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 552,
																								"nodeType": "ExpressionStatement",
																								"src": "13988:34:0"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 543,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 533,
																							"src": "13945:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 544,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13955:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13945:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 554,
																					"nodeType": "WhileStatement",
																					"src": "13938:111:0"
																				},
																				{
																					"expression": {
																						"id": 555,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 533,
																						"src": "14081:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 520,
																					"id": 556,
																					"nodeType": "Return",
																					"src": "14074:13:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 563,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "14154:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14154:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "RevertStatement",
												"src": "14147:38:0"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "12872:66:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12952:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "12971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12970:17:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "13010:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13009:9:0"
									},
									"scope": 1675,
									"src": "12943:1249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "14385:262:0",
										"statements": [
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 576,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14395:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14405:4:0",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1721,
														"src": "14395:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 583,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "14428:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 581,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14420:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14420:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14412:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14412:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14412:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14395:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "14395:41:0"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 588,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14446:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14456:14:0",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1723,
														"src": "14446:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 593,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "14480:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 594,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "14490:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14480:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14473:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 591,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14473:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14473:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14446:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "14446:68:0"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 599,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14524:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14534:6:0",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1725,
														"src": "14524:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "14543:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 603,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "14552:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14543:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14571:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14543:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14524:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "14524:48:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 609,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "14582:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14592:9:0",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1727,
														"src": "14582:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "14611:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 615,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "14621:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14611:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 612,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14604:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14604:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14582:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "14582:58:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "14198:83:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14295:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14322:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "14314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:16:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14374:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "14352:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1728_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "TokenOwnership",
														"nameLocations": [
															"14352:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "14352:14:0"
													},
													"referencedDeclaration": 1728,
													"src": "14352:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1728_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:33:0"
									},
									"scope": 1675,
									"src": "14286:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "14821:347:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14840:322:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14950:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14963:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14970:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14959:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14959:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14950:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15079:73:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15092:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15106:23:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15131:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15131:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15102:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15102:41:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15145:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15099:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15099:52:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15089:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15089:63:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15079:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "14970:16:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "15106:23:0",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "15145:5:0",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "14950:5:0",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "14963:5:0",
														"valueSize": 1
													},
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": false,
														"src": "15092:5:0",
														"valueSize": 1
													},
													{
														"declaration": 629,
														"isOffset": false,
														"isSlot": false,
														"src": "15079:6:0",
														"valueSize": 1
													}
												],
												"id": 631,
												"nodeType": "InlineAssembly",
												"src": "14831:331:0"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "14653:67:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14734:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14761:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "14753:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "14768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14752:30:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14813:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "14805:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14804:16:0"
									},
									"scope": 1675,
									"src": "14725:443:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "15351:232:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15435:142:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15511:56:0",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15525:24:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15554:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15564:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15551:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15551:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15521:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15521:46:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15511:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "15525:24:0",
														"valueSize": 1
													},
													{
														"declaration": 636,
														"isOffset": false,
														"isSlot": false,
														"src": "15554:8:0",
														"valueSize": 1
													},
													{
														"declaration": 639,
														"isOffset": false,
														"isSlot": false,
														"src": "15511:6:0",
														"valueSize": 1
													}
												],
												"id": 641,
												"nodeType": "InlineAssembly",
												"src": "15426:151:0"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "15174:86:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15274:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15303:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "15295:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15294:18:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15343:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "15335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15334:16:0"
									},
									"scope": 1675,
									"src": "15265:318:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "16318:412:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 652,
															"name": "getDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "16332:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16332:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 654,
														"name": "_APPROVED_START_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "16342:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16332:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "16328:83:0",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "16363:48:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 656,
																	"name": "CanNotApproval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "16384:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16384:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 658,
															"nodeType": "RevertStatement",
															"src": "16377:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16428:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "16420:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 661,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16420:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "16444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16436:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16420:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 667,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "16467:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16467:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 669,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "16490:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16467:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "16463:172:0",
												"trueBody": {
													"condition": {
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16513:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 672,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "16531:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 673,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "16538:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16538:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 671,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "16514:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16514:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 681,
													"nodeType": "IfStatement",
													"src": "16509:126:0",
													"trueBody": {
														"id": 680,
														"nodeType": "Block",
														"src": "16560:75:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 677,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "16585:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16585:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 679,
																"nodeType": "RevertStatement",
																"src": "16578:42:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 683,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "16645:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 685,
															"indexExpression": {
																"id": 684,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "16661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16645:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16670:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "16645:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 687,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "16678:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16645:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "16645:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 691,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "16704:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "16711:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "16715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "16695:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16695:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "16690:33:0"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "15776:459:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16249:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 650,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16309:8:0"
									},
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16265:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "16257:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16277:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "16269:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16256:29:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16318:0:0"
									},
									"scope": 1675,
									"src": "16240:490:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1841
									],
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "16965:129:0",
										"statements": [
											{
												"condition": {
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16979:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 707,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "16988:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 706,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "16980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16980:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "16975:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 710,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "17005:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17005:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 712,
													"nodeType": "RevertStatement",
													"src": "16998:41:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 714,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "17057:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 716,
														"indexExpression": {
															"id": 715,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "17073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17057:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17082:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "17057:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 705,
												"id": 718,
												"nodeType": "Return",
												"src": "17050:37:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "16736:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16889:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16938:8:0"
									},
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "16901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16900:17:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "16956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16955:9:0"
									},
									"scope": 1675,
									"src": "16880:214:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1833
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "17505:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 729,
															"name": "getDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "17519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17519:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 731,
														"name": "_APPROVED_START_TIME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "17529:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17519:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "17515:83:0",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "17550:48:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 733,
																	"name": "CanNotApproval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "17571:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17571:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "17564:23:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 738,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "17607:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 742,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 739,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "17626:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17626:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17607:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 743,
														"indexExpression": {
															"id": 741,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "17647:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17607:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 744,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "17659:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17607:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "17607:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 748,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "17697:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17697:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "17718:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "17728:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "17682:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17682:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "17677:60:0"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "17100:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17430:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17496:8:0"
									},
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "17448:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17471:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "17466:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17447:33:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17505:0:0"
									},
									"scope": 1675,
									"src": "17421:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1851
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "17997:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 766,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "18014:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 768,
														"indexExpression": {
															"id": 767,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "18033:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18014:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 770,
													"indexExpression": {
														"id": 769,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "18040:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18014:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 765,
												"id": 771,
												"nodeType": "Return",
												"src": "18007:42:0"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "17750:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17903:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 762,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17973:8:0"
									},
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "17920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17943:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "17935:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17919:33:0"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "17991:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17990:6:0"
									},
									"scope": 1675,
									"src": "17894:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "18376:206:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "18405:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18405:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 783,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "18424:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18405:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "18447:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 786,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "18457:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18447:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18405:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 789,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "18507:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 791,
																"indexExpression": {
																	"id": 790,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "18525:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18507:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 792,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "18536:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18507:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18555:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18507:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18405:151:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 780,
												"id": 797,
												"nodeType": "Return",
												"src": "18386:170:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "18062:238:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18314:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "18322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18321:17:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "18370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18369:6:0"
									},
									"scope": 1675,
									"src": "18305:277:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "18844:488:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18863:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18973:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18986:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18993:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18982:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18982:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18973:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19123:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19140:9:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19151:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19136:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19136:32:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19123:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19250:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19266:9:0"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19277:5:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19263:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19263:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19288:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19299:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19285:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19285:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19260:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:56:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19250:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "18993:16:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "19151:16:0",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "19299:15:0",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "19123:9:0",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "19140:9:0",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "19266:9:0",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "19288:9:0",
														"valueSize": 1
													},
													{
														"declaration": 804,
														"isOffset": false,
														"isSlot": false,
														"src": "18973:5:0",
														"valueSize": 1
													},
													{
														"declaration": 804,
														"isOffset": false,
														"isSlot": false,
														"src": "18986:5:0",
														"valueSize": 1
													},
													{
														"declaration": 804,
														"isOffset": false,
														"isSlot": false,
														"src": "19277:5:0",
														"valueSize": 1
													},
													{
														"declaration": 809,
														"isOffset": false,
														"isSlot": false,
														"src": "19250:6:0",
														"valueSize": 1
													}
												],
												"id": 811,
												"nodeType": "InlineAssembly",
												"src": "18854:472:0"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "18588:93:0",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18695:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18737:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "18729:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "18762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18793:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "18785:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18719:89:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "18831:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18830:13:0"
									},
									"scope": 1675,
									"src": "18686:646:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "19597:317:0",
										"statements": [
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19632:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "19607:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 824,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 823,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"19607:16:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 23,
																"src": "19607:16:0"
															},
															"referencedDeclaration": 23,
															"src": "19607:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"id": 826,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "19648:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "19664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19648:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19607:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19785:123:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19799:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19822:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19799:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19853:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19878:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19872:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19872:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19853:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 821,
														"isOffset": false,
														"isSlot": false,
														"src": "19853:15:0",
														"valueSize": 1
													},
													{
														"declaration": 819,
														"isOffset": false,
														"isSlot": false,
														"src": "19799:19:0",
														"valueSize": 1
													},
													{
														"declaration": 819,
														"isOffset": false,
														"isSlot": false,
														"src": "19878:19:0",
														"valueSize": 1
													},
													{
														"declaration": 825,
														"isOffset": false,
														"isSlot": true,
														"src": "19822:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 830,
												"nodeType": "InlineAssembly",
												"src": "19776:132:0"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "19338:97:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19449:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "19476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19475:17:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19547:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "19539:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19576:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "19568:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19538:54:0"
									},
									"scope": 1675,
									"src": "19440:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1817
									],
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "20642:2637:0",
										"statements": [
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20660:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "20652:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 848,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "20701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "20682:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20682:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20652:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 853,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "20740:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 851,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20732:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20732:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 849,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20724:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20724:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 856,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "20765:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20724:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "20720:86:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 858,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "20778:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20778:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 860,
													"nodeType": "RevertStatement",
													"src": "20771:35:0"
												}
											},
											{
												"assignments": [
													863,
													865
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20826:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "20818:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20818:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20855:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 976,
														"src": "20847:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 864,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20847:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 869,
												"initialValue": {
													"arguments": [
														{
															"id": 867,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "20901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "20874:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20874:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20817:92:0"
											},
											{
												"condition": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21005:69:0",
													"subExpression": {
														"arguments": [
															{
																"id": 871,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "21031:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 872,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "21048:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 873,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "21054:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21054:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 870,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "21006:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21006:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "21001:179:0",
												"trueBody": {
													"condition": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21092:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "21110:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 879,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "21116:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21116:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 877,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "21093:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21093:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 886,
													"nodeType": "IfStatement",
													"src": "21088:92:0",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "21145:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21145:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 885,
														"nodeType": "RevertStatement",
														"src": "21138:42:0"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 888,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "21195:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21209:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21201:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21201:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21195:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "21191:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 894,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "21220:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21220:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 896,
													"nodeType": "RevertStatement",
													"src": "21213:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "21276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "21282:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "21286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21295:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 898,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "21254:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21254:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "21254:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21369:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21402:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21503:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21524:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21496:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21496:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21496:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21386:15:0"
															},
															"nodeType": "YulIf",
															"src": "21383:157:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 865,
														"isOffset": false,
														"isSlot": false,
														"src": "21386:15:0",
														"valueSize": 1
													},
													{
														"declaration": 863,
														"isOffset": false,
														"isSlot": false,
														"src": "21503:19:0",
														"valueSize": 1
													}
												],
												"id": 905,
												"nodeType": "InlineAssembly",
												"src": "21360:190:0"
											},
											{
												"id": 962,
												"nodeType": "UncheckedBlock",
												"src": "21817:1361:0",
												"statements": [
													{
														"expression": {
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21910:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 906,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "21912:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 908,
																"indexExpression": {
																	"id": 907,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "21931:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21912:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 910,
														"nodeType": "ExpressionStatement",
														"src": "21910:26:0"
													},
													{
														"expression": {
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21978:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 911,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "21980:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 913,
																"indexExpression": {
																	"id": 912,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "21999:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21980:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 915,
														"nodeType": "ExpressionStatement",
														"src": "21978:24:0"
													},
													{
														"expression": {
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 916,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "22266:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 918,
																"indexExpression": {
																	"id": 917,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "22284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22266:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 920,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "22331:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 921,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "22351:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 923,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "22394:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 924,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22400:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 925,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 844,
																					"src": "22404:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 922,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "22379:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22379:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22351:73:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 919,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "22295:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22295:143:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22266:172:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "22266:172:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "22555:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 932,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "22577:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22555:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22555:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "22551:617:0",
														"trueBody": {
															"id": 960,
															"nodeType": "Block",
															"src": "22609:559:0",
															"statements": [
																{
																	"assignments": [
																		937
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 937,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22635:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 960,
																			"src": "22627:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 936,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22627:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 941,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 938,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 839,
																			"src": "22649:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22659:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22649:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22627:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 942,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 104,
																				"src": "22780:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 944,
																			"indexExpression": {
																				"id": 943,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "22798:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22780:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22814:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22780:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 959,
																	"nodeType": "IfStatement",
																	"src": "22776:378:0",
																	"trueBody": {
																		"id": 958,
																		"nodeType": "Block",
																		"src": "22817:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 949,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 947,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 937,
																						"src": "22901:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 948,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 94,
																						"src": "22916:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22901:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 957,
																				"nodeType": "IfStatement",
																				"src": "22897:239:0",
																				"trueBody": {
																					"id": 956,
																					"nodeType": "Block",
																					"src": "22931:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 954,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 950,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 104,
																										"src": "23061:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 952,
																									"indexExpression": {
																										"id": 951,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 937,
																										"src": "23079:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23061:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 953,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 844,
																									"src": "23094:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23061:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 955,
																							"nodeType": "ExpressionStatement",
																							"src": "23061:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 964,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "23202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "23208:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "23212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 963,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "23193:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23193:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "EmitStatement",
												"src": "23188:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "23251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "23257:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "23261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23270:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 969,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "23230:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23230:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "23230:42:0"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "20107:403:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20524:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 841,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20633:8:0"
									},
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "20546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20576:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "20568:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "20588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20536:73:0"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20642:0:0"
									},
									"scope": 1675,
									"src": "20515:2764:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1807
									],
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "23501:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "23528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "23534:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "23538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23547:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 988,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															996,
															1034
														],
														"referencedDeclaration": 1034,
														"src": "23511:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23511:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "23511:39:0"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "23285:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23379:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 986,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23492:8:0"
									},
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "23405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23435:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "23427:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23455:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "23447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23395:73:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23501:0:0"
									},
									"scope": 1675,
									"src": "23370:187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1797
									],
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "24297:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "24320:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "24326:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "24330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "24307:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24307:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "24307:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1015,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "24352:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24355:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24360:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24352:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24370:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24352:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "24348:180:0",
												"trueBody": {
													"condition": {
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24389:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1021,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "24421:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1022,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "24427:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1023,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "24431:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1024,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "24440:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1020,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "24390:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24390:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "24385:143:0",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "24448:80:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1027,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "24473:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24473:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "24466:47:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "23563:570:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24147:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1007,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24288:8:0"
									},
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24181:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "24173:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24203:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "24195:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24223:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "24215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "24240:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24240:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24163:101:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24297:0:0"
									},
									"scope": 1675,
									"src": "24138:396:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "25330:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "24540:633:0",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25187:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "25218:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25248:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "25240:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25268:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "25260:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25298:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "25290:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25208:104:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25330:0:0"
									},
									"scope": 1675,
									"src": "25178:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "26130:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "25338:636:0",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "25988:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26026:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "26018:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26048:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "26040:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26068:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "26060:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26098:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "26090:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26008:104:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26130:0:0"
									},
									"scope": 1675,
									"src": "25979:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "26724:533:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1095,
															"nodeType": "Block",
															"src": "26873:96:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1087,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "26894:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1089,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1065,
																							"src": "26929:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1088,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "26904:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26904:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "26933:16:0",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "26904:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26950:8:0",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26904:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26894:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1073,
																	"id": 1094,
																	"nodeType": "Return",
																	"src": "26887:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1096,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1086,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1085,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26856:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1096,
																	"src": "26849:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1084,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26849:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26835:37:0"
														},
														"src": "26827:142:0"
													},
													{
														"block": {
															"id": 1111,
															"nodeType": "Block",
															"src": "26998:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1100,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1098,
																				"src": "27016:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27023:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27016:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27033:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27016:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1109,
																		"nodeType": "Block",
																		"src": "27122:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "27149:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "27182:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27186:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27178:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27178:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27201:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "27195:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27195:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "27171:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27171:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27171:38:0"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1098,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27186:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1098,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27201:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 1108,
																				"nodeType": "InlineAssembly",
																				"src": "27140:87:0"
																			}
																		]
																	},
																	"id": 1110,
																	"nodeType": "IfStatement",
																	"src": "27012:229:0",
																	"trueBody": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "27036:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1104,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1705,
																						"src": "27061:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27061:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1106,
																				"nodeType": "RevertStatement",
																				"src": "27054:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1112,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1099,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1098,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "26990:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1112,
																	"src": "26977:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1097,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "26977:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26976:21:0"
														},
														"src": "26970:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1078,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "26784:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26784:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "26805:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "26811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "26820:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1075,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "26763:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1074,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "26738:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26738:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26767:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "26738:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26738:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1113,
												"nodeType": "TryStatement",
												"src": "26734:517:0"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "26138:417:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26569:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26617:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "26609:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26639:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "26631:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26659:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "26651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "26676:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26599:101:0"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "26718:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26717:6:0"
									},
									"scope": 1675,
									"src": "26560:697:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "27765:2840:0",
										"statements": [
											{
												"assignments": [
													1124
												],
												"declarations": [
													{
														"constant": false,
														"id": 1124,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27783:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "27775:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27775:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"id": 1125,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "27798:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27775:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1127,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "27825:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27837:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27825:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "27821:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1130,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "27847:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27847:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1132,
													"nodeType": "RevertStatement",
													"src": "27840:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1135,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27898:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27898:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "27910:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "27914:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1141,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "27928:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "27876:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27876:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "27876:61:0"
											},
											{
												"id": 1199,
												"nodeType": "UncheckedBlock",
												"src": "28120:2409:0",
												"statements": [
													{
														"expression": {
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1144,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "28340:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1146,
																"indexExpression": {
																	"id": 1145,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "28359:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28340:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1147,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "28366:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1150,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1148,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28379:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1149,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "28384:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28379:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1151,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28378:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28409:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28378:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1154,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28377:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28366:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28340:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1157,
														"nodeType": "ExpressionStatement",
														"src": "28340:71:0"
													},
													{
														"expression": {
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1158,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "28647:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1160,
																"indexExpression": {
																	"id": 1159,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "28665:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28647:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1162,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "28717:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1164,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1120,
																					"src": "28758:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1163,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "28737:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28737:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1169,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28793:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28785:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1167,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28785:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28785:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1171,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "28797:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28801:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1166,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "28770:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28770:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28737:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1161,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "28681:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28681:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28647:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1177,
														"nodeType": "ExpressionStatement",
														"src": "28647:170:0"
													},
													{
														"assignments": [
															1179
														],
														"declarations": [
															{
																"constant": false,
																"id": 1179,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28840:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1199,
																"src": "28832:16:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28832:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1180,
														"nodeType": "VariableDeclarationStatement",
														"src": "28832:16:0"
													},
													{
														"assignments": [
															1182
														],
														"declarations": [
															{
																"constant": false,
																"id": 1182,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "28870:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1199,
																"src": "28862:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1181,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28862:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1186,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "28876:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1184,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "28891:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28876:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28862:37:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29269:1157:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29384:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "29400:2:0"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "29404:16:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29396:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29396:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "29384:8:0"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29510:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29570:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29628:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29689:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29729:8:0"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29768:12:0"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "29484:4:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29484:328:0"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29484:328:0"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30245:167:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30340:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30343:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30346:25:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30373:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30376:8:0"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30386:7:0"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "30335:4:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30335:59:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30335:59:0"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30163:7:0"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "30172:3:0"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "30160:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30160:16:0"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "30153:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30153:24:0"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "30178:66:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "30200:26:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30215:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30224:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30211:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30211:15:0"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30200:7:0"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "30077:75:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "30099:35:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30118:12:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30132:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30114:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30114:20:0"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "30103:7:0",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30073:339:0"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 83,
																"isOffset": false,
																"isSlot": false,
																"src": "29404:16:0",
																"valueSize": 1
															},
															{
																"declaration": 89,
																"isOffset": false,
																"isSlot": false,
																"src": "29628:25:0",
																"valueSize": 1
															},
															{
																"declaration": 89,
																"isOffset": false,
																"isSlot": false,
																"src": "30346:25:0",
																"valueSize": 1
															},
															{
																"declaration": 1182,
																"isOffset": false,
																"isSlot": false,
																"src": "30172:3:0",
																"valueSize": 1
															},
															{
																"declaration": 1124,
																"isOffset": false,
																"isSlot": false,
																"src": "29768:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1124,
																"isOffset": false,
																"isSlot": false,
																"src": "30118:12:0",
																"valueSize": 1
															},
															{
																"declaration": 1118,
																"isOffset": false,
																"isSlot": false,
																"src": "29400:2:0",
																"valueSize": 1
															},
															{
																"declaration": 1179,
																"isOffset": false,
																"isSlot": false,
																"src": "29384:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1179,
																"isOffset": false,
																"isSlot": false,
																"src": "29729:8:0",
																"valueSize": 1
															},
															{
																"declaration": 1179,
																"isOffset": false,
																"isSlot": false,
																"src": "30376:8:0",
																"valueSize": 1
															}
														],
														"id": 1187,
														"nodeType": "InlineAssembly",
														"src": "29260:1166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "30443:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30443:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1194,
														"nodeType": "IfStatement",
														"src": "30439:45:0",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1191,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "30465:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30465:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1193,
															"nodeType": "RevertStatement",
															"src": "30458:26:0"
														}
													},
													{
														"expression": {
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1195,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "30499:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1196,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "30515:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30499:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1198,
														"nodeType": "ExpressionStatement",
														"src": "30499:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30559:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1201,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30559:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30559:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "30571:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "30575:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1207,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "30589:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "30538:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30538:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "30538:60:0"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "27448:250:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27712:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27726:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "27718:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27738:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "27730:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27717:30:0"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27765:0:0"
									},
									"scope": 1675,
									"src": "27703:2902:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "31514:1374:0",
										"statements": [
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31532:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1322,
														"src": "31524:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"id": 1221,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 94,
													"src": "31547:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31524:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1223,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "31574:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31588:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1224,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31580:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31580:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31574:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "31570:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1229,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "31599:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31599:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1231,
													"nodeType": "RevertStatement",
													"src": "31592:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "31632:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31632:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1239,
												"nodeType": "IfStatement",
												"src": "31628:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1236,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "31654:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31654:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1238,
													"nodeType": "RevertStatement",
													"src": "31647:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1240,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "31686:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1241,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "31697:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31686:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "31682:89:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1243,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "31738:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31738:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1245,
													"nodeType": "RevertStatement",
													"src": "31731:40:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31812:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31804:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31804:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "31816:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31820:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1254,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "31834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "31782:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31782:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "31782:61:0"
											},
											{
												"id": 1311,
												"nodeType": "UncheckedBlock",
												"src": "31952:860:0",
												"statements": [
													{
														"expression": {
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1257,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "32172:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1259,
																"indexExpression": {
																	"id": 1258,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "32191:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32172:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "32198:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1263,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1261,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32211:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1262,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "32216:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32211:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1264,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32210:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32241:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32210:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1267,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32209:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32198:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32172:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1270,
														"nodeType": "ExpressionStatement",
														"src": "32172:71:0"
													},
													{
														"expression": {
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1271,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "32479:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1273,
																"indexExpression": {
																	"id": 1272,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "32497:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32479:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "32549:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1277,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "32590:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1276,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "32569:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32569:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32625:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32617:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1280,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32617:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32617:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1284,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1214,
																					"src": "32629:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32633:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1279,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "32602:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32602:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32569:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1274,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "32513:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32513:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32479:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1290,
														"nodeType": "ExpressionStatement",
														"src": "32479:170:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1292,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "32689:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1293,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "32703:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1294,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1216,
																			"src": "32718:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32703:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32729:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32703:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32740:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32732:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32732:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32732:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1302,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "32744:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1291,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "32669:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32669:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1304,
														"nodeType": "EmitStatement",
														"src": "32664:83:0"
													},
													{
														"expression": {
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1305,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "32762:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1306,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "32778:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1307,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "32793:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32778:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32762:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1310,
														"nodeType": "ExpressionStatement",
														"src": "32762:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32850:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32842:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1313,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32842:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32842:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "32854:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "32858:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1319,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "32872:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "32821:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32821:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "32821:60:0"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "30611:829:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31454:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "31467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "31479:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31466:30:0"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31514:0:0"
									},
									"scope": 1675,
									"src": "31445:1443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "33403:553:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1334,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "33419:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1335,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "33423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1333,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "33413:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33413:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "33413:19:0"
											},
											{
												"id": 1383,
												"nodeType": "UncheckedBlock",
												"src": "33443:507:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1338,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1326,
																		"src": "33471:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "33474:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33471:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33479:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33471:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33471:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1382,
														"nodeType": "IfStatement",
														"src": "33467:473:0",
														"trueBody": {
															"id": 1381,
															"nodeType": "Block",
															"src": "33492:448:0",
															"statements": [
																{
																	"assignments": [
																		1344
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1344,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33518:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1381,
																			"src": "33510:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1343,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33510:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1346,
																	"initialValue": {
																		"id": 1345,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 94,
																		"src": "33524:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33510:27:0"
																},
																{
																	"assignments": [
																		1348
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1348,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33563:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1381,
																			"src": "33555:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1347,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33555:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1352,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1349,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "33571:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1350,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "33577:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33555:30:0"
																},
																{
																	"body": {
																		"id": 1369,
																		"nodeType": "Block",
																		"src": "33606:205:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33632:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1356,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33672:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1355,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33664:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1354,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33664:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1357,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33664:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1358,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1326,
																								"src": "33676:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1360,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33680:7:0",
																								"subExpression": {
																									"id": 1359,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1348,
																									"src": "33680:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1361,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1330,
																								"src": "33689:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1353,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1115,
																							"src": "33633:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33633:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1368,
																				"nodeType": "IfStatement",
																				"src": "33628:165:0",
																				"trueBody": {
																					"id": 1367,
																					"nodeType": "Block",
																					"src": "33697:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1364,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1705,
																									"src": "33730:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1365,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33730:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1366,
																							"nodeType": "RevertStatement",
																							"src": "33723:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1370,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "33819:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1371,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "33827:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33819:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1373,
																	"nodeType": "DoWhileStatement",
																	"src": "33603:229:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1374,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 94,
																			"src": "33895:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1375,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "33912:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33895:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1380,
																	"nodeType": "IfStatement",
																	"src": "33891:34:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1377,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "33917:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33917:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1379,
																		"nodeType": "ExpressionStatement",
																		"src": "33917:8:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "32894:388:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33296:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33323:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "33315:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33343:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "33335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "33361:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33305:80:0"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33403:0:0"
									},
									"scope": 1675,
									"src": "33287:669:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "34101:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1394,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "34121:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1395,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "34125:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34135:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1393,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1385,
															1400
														],
														"referencedDeclaration": 1385,
														"src": "34111:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34111:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "34111:27:0"
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "33962:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34044:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34062:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "34054:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "34066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34053:30:0"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34101:0:0"
									},
									"scope": 1675,
									"src": "34035:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "34452:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1407,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "34468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1406,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1412,
															1564
														],
														"referencedDeclaration": 1564,
														"src": "34462:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34462:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "34462:21:0"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "34336:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34412:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34426:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "34418:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34417:17:0"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34452:0:0"
									},
									"scope": 1675,
									"src": "34403:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "34776:2946:0",
										"statements": [
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34794:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "34786:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1425,
												"initialValue": {
													"arguments": [
														{
															"id": 1423,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "34835:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1422,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "34816:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34816:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34786:57:0"
											},
											{
												"assignments": [
													1427
												],
												"declarations": [
													{
														"constant": false,
														"id": 1427,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "34862:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "34854:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1426,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34854:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1432,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "34885:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34877:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1430,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "34877:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34877:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1428,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34869:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34869:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34854:52:0"
											},
											{
												"assignments": [
													1437,
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "34926:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "34918:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "34955:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1563,
														"src": "34947:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34947:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [
														{
															"id": 1441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "35001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "34974:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34974:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34917:92:0"
											},
											{
												"condition": {
													"id": 1444,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1417,
													"src": "35024:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1464,
												"nodeType": "IfStatement",
												"src": "35020:312:0",
												"trueBody": {
													"id": 1463,
													"nodeType": "Block",
													"src": "35039:293:0",
													"statements": [
														{
															"condition": {
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35142:69:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1446,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "35168:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1447,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "35185:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1448,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "35191:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35191:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1445,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "35143:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35143:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1462,
															"nodeType": "IfStatement",
															"src": "35138:183:0",
															"trueBody": {
																"condition": {
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35233:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1453,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1427,
																				"src": "35251:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1454,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1664,
																					"src": "35257:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35257:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1452,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "35234:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35234:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1461,
																"nodeType": "IfStatement",
																"src": "35229:92:0",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1458,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "35286:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35286:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1460,
																	"nodeType": "RevertStatement",
																	"src": "35279:42:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1466,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "35364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35378:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35370:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35370:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "35382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35391:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1465,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "35342:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35342:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "35342:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "35465:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35498:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "35599:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35620:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "35592:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35592:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35592:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "35482:15:0"
															},
															"nodeType": "YulIf",
															"src": "35479:157:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1439,
														"isOffset": false,
														"isSlot": false,
														"src": "35482:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1437,
														"isOffset": false,
														"isSlot": false,
														"src": "35599:19:0",
														"valueSize": 1
													}
												],
												"id": 1475,
												"nodeType": "InlineAssembly",
												"src": "35456:190:0"
											},
											{
												"id": 1539,
												"nodeType": "UncheckedBlock",
												"src": "35913:1545:0",
												"statements": [
													{
														"expression": {
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1476,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "36225:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1478,
																"indexExpression": {
																	"id": 1477,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "36244:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36225:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36254:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1480,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "36259:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36254:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1482,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36253:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36284:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36253:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36225:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1486,
														"nodeType": "ExpressionStatement",
														"src": "36225:60:0"
													},
													{
														"expression": {
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1487,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "36516:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1489,
																"indexExpression": {
																	"id": 1488,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "36534:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36516:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1491,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "36581:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1494,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1492,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "36604:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1493,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 64,
																						"src": "36622:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36604:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1495,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36603:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1497,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1427,
																					"src": "36666:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1500,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36680:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1499,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36672:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1498,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36672:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1501,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36672:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1502,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "36684:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1496,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1654,
																				"src": "36651:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36651:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36603:101:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1490,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "36545:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36545:173:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36516:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1507,
														"nodeType": "ExpressionStatement",
														"src": "36516:202:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1508,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "36835:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1509,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "36857:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36835:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36835:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1538,
														"nodeType": "IfStatement",
														"src": "36831:617:0",
														"trueBody": {
															"id": 1537,
															"nodeType": "Block",
															"src": "36889:559:0",
															"statements": [
																{
																	"assignments": [
																		1514
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1514,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "36915:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1537,
																			"src": "36907:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1513,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36907:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1518,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1515,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "36929:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36939:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36929:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36907:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1519,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 104,
																				"src": "37060:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1521,
																			"indexExpression": {
																				"id": 1520,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "37078:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37060:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37094:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37060:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1536,
																	"nodeType": "IfStatement",
																	"src": "37056:378:0",
																	"trueBody": {
																		"id": 1535,
																		"nodeType": "Block",
																		"src": "37097:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1524,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1514,
																						"src": "37181:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1525,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 94,
																						"src": "37196:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37181:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1534,
																				"nodeType": "IfStatement",
																				"src": "37177:239:0",
																				"trueBody": {
																					"id": 1533,
																					"nodeType": "Block",
																					"src": "37211:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1531,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1527,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 104,
																										"src": "37341:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1529,
																									"indexExpression": {
																										"id": 1528,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1514,
																										"src": "37359:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37341:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1530,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1421,
																									"src": "37374:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37341:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1532,
																							"nodeType": "ExpressionStatement",
																							"src": "37341:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1541,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "37482:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37496:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37488:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37488:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "37500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "37473:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37473:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "EmitStatement",
												"src": "37468:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1550,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "37539:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37553:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37545:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37545:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37545:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "37557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1549,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "37518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37518:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "37518:50:0"
											},
											{
												"id": 1562,
												"nodeType": "UncheckedBlock",
												"src": "37667:49:0",
												"statements": [
													{
														"expression": {
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37691:14:0",
															"subExpression": {
																"id": 1559,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "37691:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1561,
														"nodeType": "ExpressionStatement",
														"src": "37691:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "34496:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34716:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34730:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "34722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34744:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "34739:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34721:37:0"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34776:0:0"
									},
									"scope": 1675,
									"src": "34707:3015:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "38080:447:0",
										"statements": [
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38098:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "38090:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"baseExpression": {
														"id": 1574,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "38107:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1576,
													"indexExpression": {
														"id": 1575,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "38125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38107:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38090:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "38145:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38155:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38145:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "38141:61:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1581,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "38165:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38165:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1583,
													"nodeType": "RevertStatement",
													"src": "38158:44:0"
												}
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38220:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1607,
														"src": "38212:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1587,
												"nodeType": "VariableDeclarationStatement",
												"src": "38212:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38324:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38338:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "38357:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "38338:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1569,
														"isOffset": false,
														"isSlot": false,
														"src": "38357:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1586,
														"isOffset": false,
														"isSlot": false,
														"src": "38338:15:0",
														"valueSize": 1
													}
												],
												"id": 1588,
												"nodeType": "InlineAssembly",
												"src": "38315:61:0"
											},
											{
												"expression": {
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1589,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "38385:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1590,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "38395:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1591,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "38404:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38395:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38394:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1594,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "38439:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1595,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "38458:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38439:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1597,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38438:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38394:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38385:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1600,
												"nodeType": "ExpressionStatement",
												"src": "38385:92:0"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1601,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "38487:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1603,
														"indexExpression": {
															"id": 1602,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "38505:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38487:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1604,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "38514:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38487:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "38487:33:0"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "37916:84:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38014:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38038:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "38030:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38052:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "38045:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1568,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38029:33:0"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38080:0:0"
									},
									"scope": 1675,
									"src": "38005:522:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "39228:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "38533:549:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39096:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39124:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39116:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39146:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39138:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39165:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39158:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1614,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39158:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39106:82:0"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "39220:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1617,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39220:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39219:8:0"
									},
									"scope": 1675,
									"src": "39087:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "39516:164:0",
										"statements": [
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39533:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "39526:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1633,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39526:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1641,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "39552:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1638,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "39575:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39552:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39545:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1635,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39545:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39545:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39526:68:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1645,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "39630:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1646,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "39636:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1647,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "39640:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1644,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "39619:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39619:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1642,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39611:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39611:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1650,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "39655:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39611:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1652,
												"nodeType": "Return",
												"src": "39604:69:0"
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "39236:135:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39385:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39417:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "39409:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39439:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "39431:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39459:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "39451:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39399:85:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "39507:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39506:9:0"
									},
									"scope": 1675,
									"src": "39376:304:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "40118:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1660,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40135:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "40139:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40135:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1662,
												"nodeType": "Return",
												"src": "40128:17:0"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "39871:173:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40058:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40075:2:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "40109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40108:9:0"
									},
									"scope": 1675,
									"src": "40049:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1673,
										"nodeType": "Block",
										"src": "40333:1624:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "40352:1599:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40716:31:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "40735:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "40729:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "40729:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40742:4:0",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "40725:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40725:22:0"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "40720:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40826:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40832:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40819:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40819:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40819:15:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "40891:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40902:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40905:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "40898:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40898:12:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40891:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "40980:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40985:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40973:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "40973:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40973:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41075:14:0",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41086:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41079:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41333:388:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "41351:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41362:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41367:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "41358:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41358:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "41351:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41512:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "41521:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "41529:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "41535:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "41525:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "41525:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "41517:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "41517:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "41504:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41504:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41504:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "41609:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41621:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41627:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41617:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41617:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "41609:4:0"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41698:9:0",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41700:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41692:4:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41685:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41685:12:0"
																		},
																		"nodeType": "YulIf",
																		"src": "41682:25:0"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "41328:1:0",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "41330:2:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41306:21:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41308:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41320:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41312:4:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41302:419:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41735:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41753:3:0"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41758:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41749:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41749:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41739:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "41855:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41866:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41871:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41862:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41862:14:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41855:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41929:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "41934:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41922:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41922:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41922:19:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "40891:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "40980:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41086:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41351:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41362:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41512:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41758:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41855:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41866:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "41929:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1667,
														"isOffset": false,
														"isSlot": false,
														"src": "41320:5:0",
														"valueSize": 1
													}
												],
												"id": 1672,
												"nodeType": "InlineAssembly",
												"src": "40343:1608:0"
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "40158:86:0",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40258:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40276:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "40268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40267:15:0"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40328:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "40314:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40314:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40313:19:0"
									},
									"scope": 1675,
									"src": "40249:1708:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1676,
							"src": "895:41064:0",
							"usedErrors": [
								1681,
								1684,
								1687,
								1690,
								1693,
								1696,
								1699,
								1702,
								1705,
								1708,
								1711,
								1714,
								1717,
								1719
							]
						}
					],
					"src": "84:41875:0"
				},
				"id": 0
			},
			"contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1883
						]
					},
					"id": 1884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1677,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1678,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:1",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 1883,
							"linearizedBaseContracts": [
								1883
							],
							"name": "IERC721A",
							"nameLocation": "157:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1681,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:1"
									},
									"src": "253:42:1"
								},
								{
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1684,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"src": "350:41:1"
								},
								{
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:1",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1687,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"src": "467:35:1"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:1",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1690,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "564:26:1"
								},
								{
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1693,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:1"
									},
									"src": "673:25:1"
								},
								{
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1696,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "753:38:1"
								},
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1699,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:1"
									},
									"src": "878:42:1"
								},
								{
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:1",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1702,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:1"
									},
									"src": "984:35:1"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:1",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1705,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:1"
									},
									"src": "1146:47:1"
								},
								{
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:1",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1708,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:1"
									},
									"src": "1259:30:1"
								},
								{
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:1",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1711,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:1"
									},
									"src": "1344:36:1"
								},
								{
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1714,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:1"
									},
									"src": "1470:40:1"
								},
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1717,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:1"
									},
									"src": "1604:44:1"
								},
								{
									"errorSelector": "cfe89eac",
									"id": 1719,
									"name": "CanNotApproval",
									"nameLocation": "1660:14:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1674:2:1"
									},
									"src": "1654:23:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1721,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1940:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "1932:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1720,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1723,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2045:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "2038:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1722,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2038:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1725,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2120:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "2115:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1724,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2115:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2231:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "2224:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1726,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2224:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1870:14:1",
									"nodeType": "StructDefinition",
									"scope": 1883,
									"src": "1863:384:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "2438:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2644:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2655:2:1"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2681:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:9:1"
									},
									"scope": 1883,
									"src": "2635:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2877:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3232:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3257:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3250:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3250:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3249:20:1"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3293:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3293:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3292:6:1"
									},
									"scope": 1883,
									"src": "3223:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "3486:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1751,
									"name": "Transfer",
									"nameLocation": "3585:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3610:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "3594:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3632:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "3616:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3652:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "3636:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:67:1"
									},
									"src": "3579:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "3667:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1760,
									"name": "Approval",
									"nameLocation": "3772:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3797:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "3781:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3820:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "3804:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3846:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "3830:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:74:1"
									},
									"src": "3766:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "3861:124:1",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1769,
									"name": "ApprovalForAll",
									"nameLocation": "3996:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4027:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4011:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4050:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4034:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4065:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "4060:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4060:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:64:1"
									},
									"src": "3990:85:1"
								},
								{
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "4081:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4169:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4187:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "4179:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4178:15:1"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4225:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "4217:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:17:1"
									},
									"scope": 1883,
									"src": "4160:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "4240:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "4393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4393:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4392:17:1"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4441:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "4433:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4432:15:1"
									},
									"scope": 1883,
									"src": "4376:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "4454:711:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5179:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5227:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5255:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5247:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5287:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5272:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5272:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:102:1"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5314:0:1"
									},
									"scope": 1883,
									"src": "5170:145:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "5321:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5415:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5449:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "5441:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "5463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "5483:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5431:73:1"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5521:0:1"
									},
									"scope": 1883,
									"src": "5406:116:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "5528:512:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6054:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6084:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "6076:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6106:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "6098:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6098:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "6118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:73:1"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6156:0:1"
									},
									"scope": 1883,
									"src": "6045:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "6163:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6636:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6652:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "6644:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "6656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:29:1"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6689:0:1"
									},
									"scope": 1883,
									"src": "6627:63:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "6696:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7026:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7052:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "7044:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7067:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "7062:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7062:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7043:34:1"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7086:0:1"
									},
									"scope": 1883,
									"src": "7017:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "7093:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7246:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7266:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7258:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:17:1"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7297:18:1"
									},
									"scope": 1883,
									"src": "7237:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "7322:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7475:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7500:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7492:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7515:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7507:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:33:1"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "7548:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7548:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7547:6:1"
									},
									"scope": 1883,
									"src": "7466:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "7745:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7817:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7821:2:1"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "7847:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7847:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7846:15:1"
									},
									"scope": 1883,
									"src": "7808:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "7868:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7942:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7948:2:1"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "7974:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7974:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:15:1"
									},
									"scope": 1883,
									"src": "7933:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "7995:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8099:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8116:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8108:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8107:17:1"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8148:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8148:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8147:15:1"
									},
									"scope": 1883,
									"src": "8090:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "8350:267:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 1882,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8628:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8664:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8648:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8685:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8677:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8712:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8696:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8718:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:90:1"
									},
									"src": "8622:116:1"
								}
							],
							"scope": 1884,
							"src": "147:8593:1",
							"usedErrors": [
								1681,
								1684,
								1687,
								1690,
								1693,
								1696,
								1699,
								1702,
								1705,
								1708,
								1711,
								1714,
								1717,
								1719
							]
						}
					],
					"src": "84:8656:1"
				},
				"id": 1
			}
		}
	}
}